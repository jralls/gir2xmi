<?xml version="1.0" encoding="UTF-8"?>
<!-- _______________________________________________________________ -->
<!---->
<!-- DTD for UML including Action Semantics -->
<!-- Generated by Adaptive Repository version 1.2 -->
<!-- _______________________________________________________________ -->
<!-- _______________________________________________________________ -->
<!---->
<!-- XMI is the top-level XML element for XMI transfer text -->
<!-- _______________________________________________________________ -->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:UML="http://www.omg.org/UML" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="XMI">
    <element name="XMI">
      <ref name="attlist.XMI"/>
      <optional>
        <ref name="XMI.header"/>
      </optional>
      <optional>
        <ref name="XMI.content"/>
      </optional>
      <zeroOrMore>
        <ref name="XMI.difference"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.extensions"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI" combine="interleave">
    <optional>
      <attribute name="xmi.version" a:defaultValue="1.1">
        <value type="string" datatypeLibrary="">1.1</value>
      </attribute>
    </optional>
    <optional>
      <attribute name="timestamp"/>
    </optional>
    <optional>
      <attribute name="verified">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.header contains documentation and identifies the model, -->
  <!-- metamodel, and metametamodel -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.header">
    <element name="XMI.header">
      <ref name="attlist.XMI.header"/>
      <optional>
        <ref name="XMI.documentation"/>
      </optional>
      <zeroOrMore>
        <ref name="XMI.model"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.metamodel"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.metametamodel"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.import"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.header" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- documentation for transfer data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.documentation">
    <element name="XMI.documentation">
      <ref name="attlist.XMI.documentation"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.owner"/>
          <ref name="XMI.contact"/>
          <ref name="XMI.longDescription"/>
          <ref name="XMI.shortDescription"/>
          <ref name="XMI.exporter"/>
          <ref name="XMI.exporterVersion"/>
          <ref name="XMI.notice"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.documentation" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.owner">
    <element name="XMI.owner">
      <ref name="attlist.XMI.owner"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.owner" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.contact">
    <element name="XMI.contact">
      <ref name="attlist.XMI.contact"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.contact" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.longDescription">
    <element name="XMI.longDescription">
      <ref name="attlist.XMI.longDescription"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.longDescription" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.shortDescription">
    <element name="XMI.shortDescription">
      <ref name="attlist.XMI.shortDescription"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.shortDescription" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporter">
    <element name="XMI.exporter">
      <ref name="attlist.XMI.exporter"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporter" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporterVersion">
    <element name="XMI.exporterVersion">
      <ref name="attlist.XMI.exporterVersion"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporterVersion" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporterID">
    <element name="XMI.exporterID">
      <ref name="attlist.XMI.exporterID"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporterID" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.notice">
    <element name="XMI.notice">
      <ref name="attlist.XMI.notice"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.notice" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.element.att defines the attributes that each XML element -->
  <!-- that corresponds to a metamodel class must have to conform to -->
  <!-- the XMI specification. -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.element.att">
    <optional>
      <attribute name="xmi.id">
        <data type="ID"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="xmi.label"/>
    </optional>
    <optional>
      <attribute name="xmi.uuid"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.link.att defines the attributes that each XML element that -->
  <!-- corresponds to a metamodel class must have to enable it to -->
  <!-- function as a simple XLink as well as refer to model -->
  <!-- constructs within the same XMI file. -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.link.att">
    <optional>
      <attribute name="href"/>
    </optional>
    <optional>
      <attribute name="xmi.idref">
        <data type="IDREF"/>
      </attribute>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.model identifies the model(s) being transferred -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.model">
    <element name="XMI.model">
      <ref name="attlist.XMI.model"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.model" combine="interleave">
    <ref name="XMI.link.att"/>
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.metamodel identifies the metamodel(s) for the transferred -->
  <!-- data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.metamodel">
    <element name="XMI.metamodel">
      <ref name="attlist.XMI.metamodel"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.metamodel" combine="interleave">
    <ref name="XMI.link.att"/>
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.metametamodel identifies the metametamodel(s) for the -->
  <!-- transferred data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.metametamodel">
    <element name="XMI.metametamodel">
      <ref name="attlist.XMI.metametamodel"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.metametamodel" combine="interleave">
    <ref name="XMI.link.att"/>
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.import identifies imported metamodel(s) -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.import">
    <element name="XMI.import">
      <ref name="attlist.XMI.import"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.import" combine="interleave">
    <ref name="XMI.link.att"/>
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.content is the actual data being transferred -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.content">
    <element name="XMI.content">
      <ref name="attlist.XMI.content"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.content" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.extensions contains data to transfer that does not conform -->
  <!-- to the metamodel(s) in the header -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.extensions">
    <element name="XMI.extensions">
      <ref name="attlist.XMI.extensions"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.extensions" combine="interleave">
    <attribute name="xmi.extender"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- extension contains information related to a specific model -->
  <!-- construct that is not defined in the metamodel(s) in the header -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.extension">
    <element name="XMI.extension">
      <ref name="attlist.XMI.extension"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.extension" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <attribute name="xmi.extender"/>
    <optional>
      <attribute name="xmi.extenderID"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.difference holds XML elements representing differences to a -->
  <!-- base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.difference">
    <element name="XMI.difference">
      <ref name="attlist.XMI.difference"/>
      <zeroOrMore>
        <choice>
          <ref name="XMI.difference"/>
          <ref name="XMI.delete"/>
          <ref name="XMI.add"/>
          <ref name="XMI.replace"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.difference" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.delete represents a deletion from a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.delete">
    <element name="XMI.delete">
      <ref name="attlist.XMI.delete"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.XMI.delete" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.add represents an addition to a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.add">
    <element name="XMI.add">
      <ref name="attlist.XMI.add"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.add" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="xmi.position" a:defaultValue="-1"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.replace represents the replacement of a model construct -->
  <!-- with another model construct in a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.replace">
    <element name="XMI.replace">
      <ref name="attlist.XMI.replace"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.replace" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="xmi.position" a:defaultValue="-1"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.reference may be used to refer to data types not defined in -->
  <!-- the metamodel -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.reference">
    <element name="XMI.reference">
      <ref name="attlist.XMI.reference"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.reference" combine="interleave">
    <ref name="XMI.link.att"/>
  </define>
  <!-- ========= UML:Data_Types ========= -->
  <define name="UML.AggregationKind">
    <choice>
      <value>none</value>
      <value>aggregate</value>
      <value>composite</value>
    </choice>
  </define>
  <define name="UML.CallConcurrencyKind">
    <choice>
      <value>sequential</value>
      <value>guarded</value>
      <value>concurrent</value>
    </choice>
  </define>
  <define name="UML.ChangeableKind">
    <choice>
      <value>changeable</value>
      <value>frozen</value>
      <value>addOnly</value>
    </choice>
  </define>
  <define name="UML.OrderingKind">
    <choice>
      <value>unordered</value>
      <value>ordered</value>
    </choice>
  </define>
  <define name="UML.ParameterDirectionKind">
    <choice>
      <value>in</value>
      <value>inout</value>
      <value>out</value>
      <value>return</value>
    </choice>
  </define>
  <define name="UML.ScopeKind">
    <choice>
      <value>instance</value>
      <value>classifier</value>
    </choice>
  </define>
  <define name="UML.VisibilityKind">
    <choice>
      <value>public</value>
      <value>protected</value>
      <value>private</value>
      <value>package</value>
    </choice>
  </define>
  <define name="UML.PseudostateKind">
    <choice>
      <value>choice</value>
      <value>deepHistory</value>
      <value>fork</value>
      <value>initial</value>
      <value>join</value>
      <value>junction</value>
      <value>shallowHistory</value>
    </choice>
  </define>
  <!-- ========= UML:Multiplicity ========= -->
  <define name="Multiplicity.range">
    <element name="UML:Multiplicity.range">
      <ref name="attlist.Multiplicity.range"/>
      <zeroOrMore>
        <ref name="MultiplicityRange"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Multiplicity.range" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MultiplicityFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="Multiplicity.range"/>
    </choice>
  </define>
  <define name="UML.MultiplicityAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <define name="Multiplicity">
    <element name="UML:Multiplicity">
      <ref name="attlist.Multiplicity"/>
      <zeroOrMore>
        <ref name="UML.MultiplicityFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Multiplicity" combine="interleave">
    <ref name="UML.MultiplicityAtts"/>
  </define>
  <!-- ========= UML:MultiplicityRange ========= -->
  <define name="MultiplicityRange.lower">
    <element name="UML:MultiplicityRange.lower">
      <ref name="attlist.MultiplicityRange.lower"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.lower" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityRange.upper">
    <element name="UML:MultiplicityRange.upper">
      <ref name="attlist.MultiplicityRange.upper"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.upper" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityRange.multiplicity">
    <element name="UML:MultiplicityRange.multiplicity">
      <ref name="attlist.MultiplicityRange.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MultiplicityRangeFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="MultiplicityRange.lower"/>
      <ref name="MultiplicityRange.upper"/>
      <ref name="MultiplicityRange.multiplicity"/>
    </choice>
  </define>
  <define name="UML.MultiplicityRangeAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="lower"/>
    </optional>
    <optional>
      <attribute name="upper"/>
    </optional>
    <optional>
      <attribute name="multiplicity">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="MultiplicityRange">
    <element name="UML:MultiplicityRange">
      <ref name="attlist.MultiplicityRange"/>
      <zeroOrMore>
        <ref name="UML.MultiplicityRangeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange" combine="interleave">
    <ref name="UML.MultiplicityRangeAtts"/>
  </define>
  <!-- ========= UML:Expression ========= -->
  <define name="Expression.language">
    <element name="UML:Expression.language">
      <ref name="attlist.Expression.language"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression.language" combine="interleave">
    <empty/>
  </define>
  <define name="Expression.body">
    <element name="UML:Expression.body">
      <ref name="attlist.Expression.body"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression.body" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ExpressionFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="Expression.language"/>
      <ref name="Expression.body"/>
    </choice>
  </define>
  <define name="UML.ExpressionAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="language"/>
    </optional>
    <optional>
      <attribute name="body"/>
    </optional>
  </define>
  <define name="Expression">
    <element name="UML:Expression">
      <ref name="attlist.Expression"/>
      <zeroOrMore>
        <ref name="UML.ExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression" combine="interleave">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <!-- ========= UML:BooleanExpression ========= -->
  <define name="UML.BooleanExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.BooleanExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="BooleanExpression">
    <element name="UML:BooleanExpression">
      <ref name="attlist.BooleanExpression"/>
      <zeroOrMore>
        <ref name="UML.BooleanExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BooleanExpression" combine="interleave">
    <ref name="UML.BooleanExpressionAtts"/>
  </define>
  <!-- ========= UML:TypeExpression ========= -->
  <define name="UML.TypeExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.TypeExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="TypeExpression">
    <element name="UML:TypeExpression">
      <ref name="attlist.TypeExpression"/>
      <zeroOrMore>
        <ref name="UML.TypeExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TypeExpression" combine="interleave">
    <ref name="UML.TypeExpressionAtts"/>
  </define>
  <!-- ========= UML:MappingExpression ========= -->
  <define name="UML.MappingExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.MappingExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="MappingExpression">
    <element name="UML:MappingExpression">
      <ref name="attlist.MappingExpression"/>
      <zeroOrMore>
        <ref name="UML.MappingExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MappingExpression" combine="interleave">
    <ref name="UML.MappingExpressionAtts"/>
  </define>
  <!-- ========= UML:TimeExpression ========= -->
  <define name="UML.TimeExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.TimeExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="TimeExpression">
    <element name="UML:TimeExpression">
      <ref name="attlist.TimeExpression"/>
      <zeroOrMore>
        <ref name="UML.TimeExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeExpression" combine="interleave">
    <ref name="UML.TimeExpressionAtts"/>
  </define>
  <!-- ========= UML:ArgListsExpression ========= -->
  <define name="UML.ArgListsExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.ArgListsExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="ArgListsExpression">
    <element name="UML:ArgListsExpression">
      <ref name="attlist.ArgListsExpression"/>
      <zeroOrMore>
        <ref name="UML.ArgListsExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ArgListsExpression" combine="interleave">
    <ref name="UML.ArgListsExpressionAtts"/>
  </define>
  <!-- ========= UML:ProcedureExpression ========= -->
  <define name="UML.ProcedureExpressionFeatures">
    <ref name="UML.ExpressionFeatures"/>
  </define>
  <define name="UML.ProcedureExpressionAtts">
    <ref name="UML.ExpressionAtts"/>
  </define>
  <define name="ProcedureExpression">
    <element name="UML:ProcedureExpression">
      <ref name="attlist.ProcedureExpression"/>
      <zeroOrMore>
        <ref name="UML.ProcedureExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProcedureExpression" combine="interleave">
    <ref name="UML.ProcedureExpressionAtts"/>
  </define>
  <!-- ========= UML:Core ========= -->
  <!-- ========= UML:Element ========= -->
  <define name="UML.ElementFeatures">
    <ref name="XMI.extension"/>
  </define>
  <define name="UML.ElementAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <define name="Element">
    <element name="UML:Element">
      <ref name="attlist.Element"/>
      <zeroOrMore>
        <ref name="UML.ElementFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Element" combine="interleave">
    <ref name="UML.ElementAtts"/>
  </define>
  <!-- ========= UML:ModelElement ========= -->
  <define name="ModelElement.name">
    <element name="UML:ModelElement.name">
      <ref name="attlist.ModelElement.name"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.name" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.visibility">
    <element name="UML:ModelElement.visibility">
      <ref name="attlist.ModelElement.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ModelElement.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.VisibilityKind"/>
    </attribute>
  </define>
  <define name="ModelElement.isSpecification">
    <element name="UML:ModelElement.isSpecification">
      <ref name="attlist.ModelElement.isSpecification"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ModelElement.isSpecification" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ModelElement.namespace">
    <element name="UML:ModelElement.namespace">
      <ref name="attlist.ModelElement.namespace"/>
      <zeroOrMore>
        <ref name="Namespace"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.namespace" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.clientDependency">
    <element name="UML:ModelElement.clientDependency">
      <ref name="attlist.ModelElement.clientDependency"/>
      <zeroOrMore>
        <ref name="Dependency"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.clientDependency" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.constraint">
    <element name="UML:ModelElement.constraint">
      <ref name="attlist.ModelElement.constraint"/>
      <zeroOrMore>
        <ref name="Constraint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.constraint" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.targetFlow">
    <element name="UML:ModelElement.targetFlow">
      <ref name="attlist.ModelElement.targetFlow"/>
      <zeroOrMore>
        <ref name="Flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.targetFlow" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.sourceFlow">
    <element name="UML:ModelElement.sourceFlow">
      <ref name="attlist.ModelElement.sourceFlow"/>
      <zeroOrMore>
        <ref name="Flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.sourceFlow" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.comment">
    <element name="UML:ModelElement.comment">
      <ref name="attlist.ModelElement.comment"/>
      <zeroOrMore>
        <ref name="Comment"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.comment" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.templateParameter">
    <element name="UML:ModelElement.templateParameter">
      <ref name="attlist.ModelElement.templateParameter"/>
      <zeroOrMore>
        <ref name="TemplateParameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.templateParameter" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.stereotype">
    <element name="UML:ModelElement.stereotype">
      <ref name="attlist.ModelElement.stereotype"/>
      <zeroOrMore>
        <ref name="Stereotype"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.stereotype" combine="interleave">
    <empty/>
  </define>
  <define name="ModelElement.taggedValue">
    <element name="UML:ModelElement.taggedValue">
      <ref name="attlist.ModelElement.taggedValue"/>
      <zeroOrMore>
        <ref name="TaggedValue"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement.taggedValue" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ModelElementFeatures">
    <choice>
      <ref name="UML.ElementFeatures"/>
      <ref name="ModelElement.name"/>
      <ref name="ModelElement.visibility"/>
      <ref name="ModelElement.isSpecification"/>
      <ref name="ModelElement.namespace"/>
      <ref name="ModelElement.clientDependency"/>
      <ref name="ModelElement.constraint"/>
      <ref name="ModelElement.targetFlow"/>
      <ref name="ModelElement.sourceFlow"/>
      <ref name="ModelElement.comment"/>
      <ref name="ModelElement.templateParameter"/>
      <ref name="ModelElement.stereotype"/>
      <ref name="ModelElement.taggedValue"/>
    </choice>
  </define>
  <define name="UML.ModelElementAtts">
    <ref name="UML.ElementAtts"/>
    <optional>
      <attribute name="name"/>
    </optional>
    <optional>
      <attribute name="visibility">
        <ref name="UML.VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isSpecification">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="namespace">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="clientDependency">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constraint">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetFlow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sourceFlow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="comment">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stereotype">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ModelElement">
    <element name="UML:ModelElement">
      <ref name="attlist.ModelElement"/>
      <zeroOrMore>
        <ref name="UML.ModelElementFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelElement" combine="interleave">
    <ref name="UML.ModelElementAtts"/>
  </define>
  <!-- ========= UML:GeneralizableElement ========= -->
  <define name="GeneralizableElement.isRoot">
    <element name="UML:GeneralizableElement.isRoot">
      <ref name="attlist.GeneralizableElement.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableElement.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableElement.isLeaf">
    <element name="UML:GeneralizableElement.isLeaf">
      <ref name="attlist.GeneralizableElement.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableElement.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableElement.isAbstract">
    <element name="UML:GeneralizableElement.isAbstract">
      <ref name="attlist.GeneralizableElement.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableElement.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableElement.generalization">
    <element name="UML:GeneralizableElement.generalization">
      <ref name="attlist.GeneralizableElement.generalization"/>
      <zeroOrMore>
        <ref name="Generalization"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GeneralizableElement.generalization" combine="interleave">
    <empty/>
  </define>
  <define name="UML.GeneralizableElementFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="GeneralizableElement.isRoot"/>
      <ref name="GeneralizableElement.isLeaf"/>
      <ref name="GeneralizableElement.isAbstract"/>
      <ref name="GeneralizableElement.generalization"/>
    </choice>
  </define>
  <define name="UML.GeneralizableElementAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="generalization">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="GeneralizableElement">
    <element name="UML:GeneralizableElement">
      <ref name="attlist.GeneralizableElement"/>
      <zeroOrMore>
        <ref name="UML.GeneralizableElementFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GeneralizableElement" combine="interleave">
    <ref name="UML.GeneralizableElementAtts"/>
  </define>
  <!-- ========= UML:Namespace ========= -->
  <define name="Namespace.ownedElement">
    <element name="UML:Namespace.ownedElement">
      <ref name="attlist.Namespace.ownedElement"/>
      <zeroOrMore>
        <choice>
          <ref name="ModelElement"/>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
          <ref name="AttributeLink"/>
          <ref name="Link"/>
          <ref name="LinkEnd"/>
          <ref name="Stimulus"/>
          <ref name="Procedure"/>
          <ref name="ExtensionPoint"/>
          <ref name="StateMachine"/>
          <ref name="ActivityGraph"/>
          <ref name="Event"/>
          <ref name="TimeEvent"/>
          <ref name="CallEvent"/>
          <ref name="SignalEvent"/>
          <ref name="ChangeEvent"/>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
          <ref name="Transition"/>
          <ref name="Guard"/>
          <ref name="Message"/>
          <ref name="Interaction"/>
          <ref name="InteractionInstanceSet"/>
          <ref name="CollaborationInstanceSet"/>
          <ref name="Partition"/>
          <ref name="Variable"/>
          <ref name="ArgumentSpecification"/>
          <ref name="PrimitiveFunction"/>
          <ref name="ControlFlow"/>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
          <ref name="DataFlow"/>
          <ref name="Pin"/>
          <ref name="InputPin"/>
          <ref name="OutputPin"/>
          <ref name="GeneralizableElement"/>
          <ref name="Collaboration"/>
          <ref name="Classifier"/>
          <ref name="Signal"/>
          <ref name="Exception"/>
          <ref name="UseCase"/>
          <ref name="Actor"/>
          <ref name="ClassifierRole"/>
          <ref name="ClassifierInState"/>
          <ref name="Class"/>
          <ref name="AssociationClass"/>
          <ref name="DataType"/>
          <ref name="Primitive"/>
          <ref name="Enumeration"/>
          <ref name="ProgrammingLanguageDataType"/>
          <ref name="Interface"/>
          <ref name="Component"/>
          <ref name="Node"/>
          <ref name="Artifact"/>
          <ref name="Subsystem"/>
          <ref name="Association"/>
          <ref name="AssociationRole"/>
          <ref name="Stereotype"/>
          <ref name="Package"/>
          <ref name="Model"/>
          <ref name="Namespace"/>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Reception"/>
          <ref name="Operation"/>
          <ref name="Method"/>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
          <ref name="Constraint"/>
          <ref name="Relationship"/>
          <ref name="Extend"/>
          <ref name="Include"/>
          <ref name="Generalization"/>
          <ref name="Dependency"/>
          <ref name="Abstraction"/>
          <ref name="Usage"/>
          <ref name="Binding"/>
          <ref name="Permission"/>
          <ref name="Flow"/>
          <ref name="Parameter"/>
          <ref name="Comment"/>
          <ref name="EnumerationLiteral"/>
          <ref name="TagDefinition"/>
          <ref name="TaggedValue"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Namespace.ownedElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.NamespaceFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Namespace.ownedElement"/>
    </choice>
  </define>
  <define name="UML.NamespaceAtts">
    <ref name="UML.ModelElementAtts"/>
  </define>
  <define name="Namespace">
    <element name="UML:Namespace">
      <ref name="attlist.Namespace"/>
      <zeroOrMore>
        <ref name="UML.NamespaceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Namespace" combine="interleave">
    <ref name="UML.NamespaceAtts"/>
  </define>
  <!-- ========= UML:Classifier ========= -->
  <define name="Classifier.feature">
    <element name="UML:Classifier.feature">
      <ref name="attlist.Classifier.feature"/>
      <zeroOrMore>
        <choice>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Reception"/>
          <ref name="Operation"/>
          <ref name="Method"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier.feature" combine="interleave">
    <empty/>
  </define>
  <define name="Classifier.powertypeRange">
    <element name="UML:Classifier.powertypeRange">
      <ref name="attlist.Classifier.powertypeRange"/>
      <zeroOrMore>
        <ref name="Generalization"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier.powertypeRange" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ClassifierFeatures">
    <choice>
      <ref name="UML.GeneralizableElementFeatures"/>
      <ref name="Namespace.ownedElement"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
    </choice>
  </define>
  <define name="UML.ClassifierAtts">
    <ref name="UML.GeneralizableElementAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Classifier">
    <element name="UML:Classifier">
      <ref name="attlist.Classifier"/>
      <zeroOrMore>
        <ref name="UML.ClassifierFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier" combine="interleave">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <!-- ========= UML:Class ========= -->
  <define name="Class.isActive">
    <element name="UML:Class.isActive">
      <ref name="attlist.Class.isActive"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Class.isActive" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.ClassFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="Class.isActive"/>
    </choice>
  </define>
  <define name="UML.ClassAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="isActive">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="Class">
    <element name="UML:Class">
      <ref name="attlist.Class"/>
      <zeroOrMore>
        <ref name="UML.ClassFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Class" combine="interleave">
    <ref name="UML.ClassAtts"/>
  </define>
  <!-- ========= UML:DataType ========= -->
  <define name="UML.DataTypeFeatures">
    <ref name="UML.ClassifierFeatures"/>
  </define>
  <define name="UML.DataTypeAtts">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <define name="DataType">
    <element name="UML:DataType">
      <ref name="attlist.DataType"/>
      <zeroOrMore>
        <ref name="UML.DataTypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataType" combine="interleave">
    <ref name="UML.DataTypeAtts"/>
  </define>
  <!-- ========= UML:Feature ========= -->
  <define name="Feature.ownerScope">
    <element name="UML:Feature.ownerScope">
      <ref name="attlist.Feature.ownerScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Feature.ownerScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ScopeKind"/>
    </attribute>
  </define>
  <define name="Feature.owner">
    <element name="UML:Feature.owner">
      <ref name="attlist.Feature.owner"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Feature.owner" combine="interleave">
    <empty/>
  </define>
  <define name="UML.FeatureFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Feature.ownerScope"/>
      <ref name="Feature.owner"/>
    </choice>
  </define>
  <define name="UML.FeatureAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="ownerScope">
        <ref name="UML.ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="owner">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Feature">
    <element name="UML:Feature">
      <ref name="attlist.Feature"/>
      <zeroOrMore>
        <ref name="UML.FeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Feature" combine="interleave">
    <ref name="UML.FeatureAtts"/>
  </define>
  <!-- ========= UML:StructuralFeature ========= -->
  <define name="StructuralFeature.multiplicity">
    <element name="UML:StructuralFeature.multiplicity">
      <ref name="attlist.StructuralFeature.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="StructuralFeature.changeability">
    <element name="UML:StructuralFeature.changeability">
      <ref name="attlist.StructuralFeature.changeability"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.changeability" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ChangeableKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.targetScope">
    <element name="UML:StructuralFeature.targetScope">
      <ref name="attlist.StructuralFeature.targetScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.targetScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ScopeKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.ordering">
    <element name="UML:StructuralFeature.ordering">
      <ref name="attlist.StructuralFeature.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.OrderingKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.type">
    <element name="UML:StructuralFeature.type">
      <ref name="attlist.StructuralFeature.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature.type" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StructuralFeatureFeatures">
    <choice>
      <ref name="UML.FeatureFeatures"/>
      <ref name="StructuralFeature.multiplicity"/>
      <ref name="StructuralFeature.changeability"/>
      <ref name="StructuralFeature.targetScope"/>
      <ref name="StructuralFeature.ordering"/>
      <ref name="StructuralFeature.type"/>
    </choice>
  </define>
  <define name="UML.StructuralFeatureAtts">
    <ref name="UML.FeatureAtts"/>
    <optional>
      <attribute name="changeability">
        <ref name="UML.ChangeableKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetScope">
        <ref name="UML.ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="UML.OrderingKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StructuralFeature">
    <element name="UML:StructuralFeature">
      <ref name="attlist.StructuralFeature"/>
      <zeroOrMore>
        <ref name="UML.StructuralFeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature" combine="interleave">
    <ref name="UML.StructuralFeatureAtts"/>
  </define>
  <!-- ========= UML:AssociationEnd ========= -->
  <define name="AssociationEnd.isNavigable">
    <element name="UML:AssociationEnd.isNavigable">
      <ref name="attlist.AssociationEnd.isNavigable"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.isNavigable" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="AssociationEnd.ordering">
    <element name="UML:AssociationEnd.ordering">
      <ref name="attlist.AssociationEnd.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.OrderingKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.aggregation">
    <element name="UML:AssociationEnd.aggregation">
      <ref name="attlist.AssociationEnd.aggregation"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.aggregation" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.AggregationKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.targetScope">
    <element name="UML:AssociationEnd.targetScope">
      <ref name="attlist.AssociationEnd.targetScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.targetScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ScopeKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.multiplicity">
    <element name="UML:AssociationEnd.multiplicity">
      <ref name="attlist.AssociationEnd.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.changeability">
    <element name="UML:AssociationEnd.changeability">
      <ref name="attlist.AssociationEnd.changeability"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.changeability" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ChangeableKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.association">
    <element name="UML:AssociationEnd.association">
      <ref name="attlist.AssociationEnd.association"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.association" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.qualifier">
    <element name="UML:AssociationEnd.qualifier">
      <ref name="attlist.AssociationEnd.qualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.qualifier" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.participant">
    <element name="UML:AssociationEnd.participant">
      <ref name="attlist.AssociationEnd.participant"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.participant" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.specification">
    <element name="UML:AssociationEnd.specification">
      <ref name="attlist.AssociationEnd.specification"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.specification" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AssociationEndFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="AssociationEnd.isNavigable"/>
      <ref name="AssociationEnd.ordering"/>
      <ref name="AssociationEnd.aggregation"/>
      <ref name="AssociationEnd.targetScope"/>
      <ref name="AssociationEnd.multiplicity"/>
      <ref name="AssociationEnd.changeability"/>
      <ref name="AssociationEnd.association"/>
      <ref name="AssociationEnd.qualifier"/>
      <ref name="AssociationEnd.participant"/>
      <ref name="AssociationEnd.specification"/>
    </choice>
  </define>
  <define name="UML.AssociationEndAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="isNavigable">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="UML.OrderingKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="aggregation">
        <ref name="UML.AggregationKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetScope">
        <ref name="UML.ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="changeability">
        <ref name="UML.ChangeableKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participant">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="specification">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationEnd">
    <element name="UML:AssociationEnd">
      <ref name="attlist.AssociationEnd"/>
      <zeroOrMore>
        <ref name="UML.AssociationEndFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd" combine="interleave">
    <ref name="UML.AssociationEndAtts"/>
  </define>
  <!-- ========= UML:Interface ========= -->
  <define name="UML.InterfaceFeatures">
    <ref name="UML.ClassifierFeatures"/>
  </define>
  <define name="UML.InterfaceAtts">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <define name="Interface">
    <element name="UML:Interface">
      <ref name="attlist.Interface"/>
      <zeroOrMore>
        <ref name="UML.InterfaceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interface" combine="interleave">
    <ref name="UML.InterfaceAtts"/>
  </define>
  <!-- ========= UML:Constraint ========= -->
  <define name="Constraint.body">
    <element name="UML:Constraint.body">
      <ref name="attlist.Constraint.body"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint.body" combine="interleave">
    <empty/>
  </define>
  <define name="Constraint.constrainedElement">
    <element name="UML:Constraint.constrainedElement">
      <ref name="attlist.Constraint.constrainedElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint.constrainedElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ConstraintFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Constraint.body"/>
      <ref name="Constraint.constrainedElement"/>
    </choice>
  </define>
  <define name="UML.ConstraintAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="constrainedElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Constraint">
    <element name="UML:Constraint">
      <ref name="attlist.Constraint"/>
      <zeroOrMore>
        <ref name="UML.ConstraintFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint" combine="interleave">
    <ref name="UML.ConstraintAtts"/>
  </define>
  <!-- ========= UML:Relationship ========= -->
  <define name="UML.RelationshipFeatures">
    <ref name="UML.ModelElementFeatures"/>
  </define>
  <define name="UML.RelationshipAtts">
    <ref name="UML.ModelElementAtts"/>
  </define>
  <define name="Relationship">
    <element name="UML:Relationship">
      <ref name="attlist.Relationship"/>
      <zeroOrMore>
        <ref name="UML.RelationshipFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Relationship" combine="interleave">
    <ref name="UML.RelationshipAtts"/>
  </define>
  <!-- ========= UML:Association ========= -->
  <define name="Association.connection">
    <element name="UML:Association.connection">
      <ref name="attlist.Association.connection"/>
      <zeroOrMore>
        <choice>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Association.connection" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AssociationFeatures">
    <choice>
      <ref name="UML.GeneralizableElementFeatures"/>
      <ref name="Association.connection"/>
    </choice>
  </define>
  <define name="UML.AssociationAtts">
    <ref name="UML.GeneralizableElementAtts"/>
  </define>
  <define name="Association">
    <element name="UML:Association">
      <ref name="attlist.Association"/>
      <zeroOrMore>
        <ref name="UML.AssociationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Association" combine="interleave">
    <ref name="UML.AssociationAtts"/>
  </define>
  <!-- ========= UML:Attribute ========= -->
  <define name="Attribute.initialValue">
    <element name="UML:Attribute.initialValue">
      <ref name="attlist.Attribute.initialValue"/>
      <zeroOrMore>
        <choice>
          <ref name="Expression"/>
          <ref name="BooleanExpression"/>
          <ref name="TypeExpression"/>
          <ref name="MappingExpression"/>
          <ref name="TimeExpression"/>
          <ref name="ArgListsExpression"/>
          <ref name="ProcedureExpression"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute.initialValue" combine="interleave">
    <empty/>
  </define>
  <define name="Attribute.associationEnd">
    <element name="UML:Attribute.associationEnd">
      <ref name="attlist.Attribute.associationEnd"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute.associationEnd" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AttributeFeatures">
    <choice>
      <ref name="UML.StructuralFeatureFeatures"/>
      <ref name="Attribute.initialValue"/>
      <ref name="Attribute.associationEnd"/>
    </choice>
  </define>
  <define name="UML.AttributeAtts">
    <ref name="UML.StructuralFeatureAtts"/>
    <optional>
      <attribute name="associationEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Attribute">
    <element name="UML:Attribute">
      <ref name="attlist.Attribute"/>
      <zeroOrMore>
        <ref name="UML.AttributeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute" combine="interleave">
    <ref name="UML.AttributeAtts"/>
  </define>
  <!-- ========= UML:BehavioralFeature ========= -->
  <define name="BehavioralFeature.isQuery">
    <element name="UML:BehavioralFeature.isQuery">
      <ref name="attlist.BehavioralFeature.isQuery"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.BehavioralFeature.isQuery" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="BehavioralFeature.parameter">
    <element name="UML:BehavioralFeature.parameter">
      <ref name="attlist.BehavioralFeature.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BehavioralFeature.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="UML.BehavioralFeatureFeatures">
    <choice>
      <ref name="UML.FeatureFeatures"/>
      <ref name="BehavioralFeature.isQuery"/>
      <ref name="BehavioralFeature.parameter"/>
    </choice>
  </define>
  <define name="UML.BehavioralFeatureAtts">
    <ref name="UML.FeatureAtts"/>
    <optional>
      <attribute name="isQuery">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="BehavioralFeature">
    <element name="UML:BehavioralFeature">
      <ref name="attlist.BehavioralFeature"/>
      <zeroOrMore>
        <ref name="UML.BehavioralFeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BehavioralFeature" combine="interleave">
    <ref name="UML.BehavioralFeatureAtts"/>
  </define>
  <!-- ========= UML:Operation ========= -->
  <define name="Operation.concurrency">
    <element name="UML:Operation.concurrency">
      <ref name="attlist.Operation.concurrency"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.concurrency" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.CallConcurrencyKind"/>
    </attribute>
  </define>
  <define name="Operation.isRoot">
    <element name="UML:Operation.isRoot">
      <ref name="attlist.Operation.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.isLeaf">
    <element name="UML:Operation.isLeaf">
      <ref name="attlist.Operation.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.isAbstract">
    <element name="UML:Operation.isAbstract">
      <ref name="attlist.Operation.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.specification">
    <element name="UML:Operation.specification">
      <ref name="attlist.Operation.specification"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Operation.specification" combine="interleave">
    <empty/>
  </define>
  <define name="UML.OperationFeatures">
    <choice>
      <ref name="UML.BehavioralFeatureFeatures"/>
      <ref name="Operation.concurrency"/>
      <ref name="Operation.isRoot"/>
      <ref name="Operation.isLeaf"/>
      <ref name="Operation.isAbstract"/>
      <ref name="Operation.specification"/>
    </choice>
  </define>
  <define name="UML.OperationAtts">
    <ref name="UML.BehavioralFeatureAtts"/>
    <optional>
      <attribute name="concurrency">
        <ref name="UML.CallConcurrencyKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="specification"/>
    </optional>
  </define>
  <define name="Operation">
    <element name="UML:Operation">
      <ref name="attlist.Operation"/>
      <zeroOrMore>
        <ref name="UML.OperationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Operation" combine="interleave">
    <ref name="UML.OperationAtts"/>
  </define>
  <!-- ========= UML:Parameter ========= -->
  <define name="Parameter.defaultValue">
    <element name="UML:Parameter.defaultValue">
      <ref name="attlist.Parameter.defaultValue"/>
      <zeroOrMore>
        <choice>
          <ref name="Expression"/>
          <ref name="BooleanExpression"/>
          <ref name="TypeExpression"/>
          <ref name="MappingExpression"/>
          <ref name="TimeExpression"/>
          <ref name="ArgListsExpression"/>
          <ref name="ProcedureExpression"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.defaultValue" combine="interleave">
    <empty/>
  </define>
  <define name="Parameter.kind">
    <element name="UML:Parameter.kind">
      <ref name="attlist.Parameter.kind"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Parameter.kind" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.ParameterDirectionKind"/>
    </attribute>
  </define>
  <define name="Parameter.behavioralFeature">
    <element name="UML:Parameter.behavioralFeature">
      <ref name="attlist.Parameter.behavioralFeature"/>
      <zeroOrMore>
        <ref name="BehavioralFeature"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.behavioralFeature" combine="interleave">
    <empty/>
  </define>
  <define name="Parameter.type">
    <element name="UML:Parameter.type">
      <ref name="attlist.Parameter.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.type" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ParameterFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Parameter.defaultValue"/>
      <ref name="Parameter.kind"/>
      <ref name="Parameter.behavioralFeature"/>
      <ref name="Parameter.type"/>
    </choice>
  </define>
  <define name="UML.ParameterAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="kind">
        <ref name="UML.ParameterDirectionKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="behavioralFeature">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Parameter">
    <element name="UML:Parameter">
      <ref name="attlist.Parameter"/>
      <zeroOrMore>
        <ref name="UML.ParameterFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter" combine="interleave">
    <ref name="UML.ParameterAtts"/>
  </define>
  <!-- ========= UML:Method ========= -->
  <define name="Method.body">
    <element name="UML:Method.body">
      <ref name="attlist.Method.body"/>
      <zeroOrMore>
        <ref name="ProcedureExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method.body" combine="interleave">
    <empty/>
  </define>
  <define name="Method.specification">
    <element name="UML:Method.specification">
      <ref name="attlist.Method.specification"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method.specification" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MethodFeatures">
    <choice>
      <ref name="UML.BehavioralFeatureFeatures"/>
      <ref name="Method.body"/>
      <ref name="Method.specification"/>
    </choice>
  </define>
  <define name="UML.MethodAtts">
    <ref name="UML.BehavioralFeatureAtts"/>
    <optional>
      <attribute name="specification">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Method">
    <element name="UML:Method">
      <ref name="attlist.Method"/>
      <zeroOrMore>
        <ref name="UML.MethodFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method" combine="interleave">
    <ref name="UML.MethodAtts"/>
  </define>
  <!-- ========= UML:Generalization ========= -->
  <define name="Generalization.discriminator">
    <element name="UML:Generalization.discriminator">
      <ref name="attlist.Generalization.discriminator"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.discriminator" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.child">
    <element name="UML:Generalization.child">
      <ref name="attlist.Generalization.child"/>
      <zeroOrMore>
        <ref name="GeneralizableElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.child" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.parent">
    <element name="UML:Generalization.parent">
      <ref name="attlist.Generalization.parent"/>
      <zeroOrMore>
        <ref name="GeneralizableElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.parent" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.powertype">
    <element name="UML:Generalization.powertype">
      <ref name="attlist.Generalization.powertype"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.powertype" combine="interleave">
    <empty/>
  </define>
  <define name="UML.GeneralizationFeatures">
    <choice>
      <ref name="UML.RelationshipFeatures"/>
      <ref name="Generalization.discriminator"/>
      <ref name="Generalization.child"/>
      <ref name="Generalization.parent"/>
      <ref name="Generalization.powertype"/>
    </choice>
  </define>
  <define name="UML.GeneralizationAtts">
    <ref name="UML.RelationshipAtts"/>
    <optional>
      <attribute name="discriminator"/>
    </optional>
    <optional>
      <attribute name="child">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="parent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="powertype">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Generalization">
    <element name="UML:Generalization">
      <ref name="attlist.Generalization"/>
      <zeroOrMore>
        <ref name="UML.GeneralizationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization" combine="interleave">
    <ref name="UML.GeneralizationAtts"/>
  </define>
  <!-- ========= UML:AssociationClass ========= -->
  <define name="UML.AssociationClassFeatures">
    <choice>
      <ref name="UML.AssociationFeatures"/>
      <ref name="Namespace.ownedElement"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
      <ref name="Class.isActive"/>
    </choice>
  </define>
  <define name="UML.AssociationClassAtts">
    <ref name="UML.AssociationAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isActive">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="AssociationClass">
    <element name="UML:AssociationClass">
      <ref name="attlist.AssociationClass"/>
      <zeroOrMore>
        <ref name="UML.AssociationClassFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationClass" combine="interleave">
    <ref name="UML.AssociationClassAtts"/>
  </define>
  <!-- ========= UML:Dependency ========= -->
  <define name="Dependency.client">
    <element name="UML:Dependency.client">
      <ref name="attlist.Dependency.client"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency.client" combine="interleave">
    <empty/>
  </define>
  <define name="Dependency.supplier">
    <element name="UML:Dependency.supplier">
      <ref name="attlist.Dependency.supplier"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency.supplier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.DependencyFeatures">
    <choice>
      <ref name="UML.RelationshipFeatures"/>
      <ref name="Dependency.client"/>
      <ref name="Dependency.supplier"/>
    </choice>
  </define>
  <define name="UML.DependencyAtts">
    <ref name="UML.RelationshipAtts"/>
    <optional>
      <attribute name="client">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="supplier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Dependency">
    <element name="UML:Dependency">
      <ref name="attlist.Dependency"/>
      <zeroOrMore>
        <ref name="UML.DependencyFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency" combine="interleave">
    <ref name="UML.DependencyAtts"/>
  </define>
  <!-- ========= UML:Abstraction ========= -->
  <define name="Abstraction.mapping">
    <element name="UML:Abstraction.mapping">
      <ref name="attlist.Abstraction.mapping"/>
      <zeroOrMore>
        <ref name="MappingExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Abstraction.mapping" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AbstractionFeatures">
    <choice>
      <ref name="UML.DependencyFeatures"/>
      <ref name="Abstraction.mapping"/>
    </choice>
  </define>
  <define name="UML.AbstractionAtts">
    <ref name="UML.DependencyAtts"/>
  </define>
  <define name="Abstraction">
    <element name="UML:Abstraction">
      <ref name="attlist.Abstraction"/>
      <zeroOrMore>
        <ref name="UML.AbstractionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Abstraction" combine="interleave">
    <ref name="UML.AbstractionAtts"/>
  </define>
  <!-- ========= UML:PresentationElement ========= -->
  <define name="PresentationElement.subject">
    <element name="UML:PresentationElement.subject">
      <ref name="attlist.PresentationElement.subject"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PresentationElement.subject" combine="interleave">
    <empty/>
  </define>
  <define name="UML.PresentationElementFeatures">
    <choice>
      <ref name="UML.ElementFeatures"/>
      <ref name="PresentationElement.subject"/>
    </choice>
  </define>
  <define name="UML.PresentationElementAtts">
    <ref name="UML.ElementAtts"/>
    <optional>
      <attribute name="subject">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="PresentationElement">
    <element name="UML:PresentationElement">
      <ref name="attlist.PresentationElement"/>
      <zeroOrMore>
        <ref name="UML.PresentationElementFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PresentationElement" combine="interleave">
    <ref name="UML.PresentationElementAtts"/>
  </define>
  <!-- ========= UML:Usage ========= -->
  <define name="UML.UsageFeatures">
    <ref name="UML.DependencyFeatures"/>
  </define>
  <define name="UML.UsageAtts">
    <ref name="UML.DependencyAtts"/>
  </define>
  <define name="Usage">
    <element name="UML:Usage">
      <ref name="attlist.Usage"/>
      <zeroOrMore>
        <ref name="UML.UsageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Usage" combine="interleave">
    <ref name="UML.UsageAtts"/>
  </define>
  <!-- ========= UML:Binding ========= -->
  <define name="Binding.argument">
    <element name="UML:Binding.argument">
      <ref name="attlist.Binding.argument"/>
      <zeroOrMore>
        <ref name="TemplateArgument"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Binding.argument" combine="interleave">
    <empty/>
  </define>
  <define name="UML.BindingFeatures">
    <choice>
      <ref name="UML.DependencyFeatures"/>
      <ref name="Binding.argument"/>
    </choice>
  </define>
  <define name="UML.BindingAtts">
    <ref name="UML.DependencyAtts"/>
  </define>
  <define name="Binding">
    <element name="UML:Binding">
      <ref name="attlist.Binding"/>
      <zeroOrMore>
        <ref name="UML.BindingFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Binding" combine="interleave">
    <ref name="UML.BindingAtts"/>
  </define>
  <!-- ========= UML:Component ========= -->
  <define name="Component.deploymentLocation">
    <element name="UML:Component.deploymentLocation">
      <ref name="attlist.Component.deploymentLocation"/>
      <zeroOrMore>
        <ref name="Node"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.deploymentLocation" combine="interleave">
    <empty/>
  </define>
  <define name="Component.residentElement">
    <element name="UML:Component.residentElement">
      <ref name="attlist.Component.residentElement"/>
      <zeroOrMore>
        <ref name="ElementResidence"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.residentElement" combine="interleave">
    <empty/>
  </define>
  <define name="Component.implementation">
    <element name="UML:Component.implementation">
      <ref name="attlist.Component.implementation"/>
      <zeroOrMore>
        <ref name="Artifact"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.implementation" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ComponentFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="Component.deploymentLocation"/>
      <ref name="Component.residentElement"/>
      <ref name="Component.implementation"/>
    </choice>
  </define>
  <define name="UML.ComponentAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="deploymentLocation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="implementation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Component">
    <element name="UML:Component">
      <ref name="attlist.Component"/>
      <zeroOrMore>
        <ref name="UML.ComponentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component" combine="interleave">
    <ref name="UML.ComponentAtts"/>
  </define>
  <!-- ========= UML:Node ========= -->
  <define name="Node.deployedComponent">
    <element name="UML:Node.deployedComponent">
      <ref name="attlist.Node.deployedComponent"/>
      <zeroOrMore>
        <ref name="Component"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Node.deployedComponent" combine="interleave">
    <empty/>
  </define>
  <define name="UML.NodeFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="Node.deployedComponent"/>
    </choice>
  </define>
  <define name="UML.NodeAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="deployedComponent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Node">
    <element name="UML:Node">
      <ref name="attlist.Node"/>
      <zeroOrMore>
        <ref name="UML.NodeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Node" combine="interleave">
    <ref name="UML.NodeAtts"/>
  </define>
  <!-- ========= UML:Permission ========= -->
  <define name="UML.PermissionFeatures">
    <ref name="UML.DependencyFeatures"/>
  </define>
  <define name="UML.PermissionAtts">
    <ref name="UML.DependencyAtts"/>
  </define>
  <define name="Permission">
    <element name="UML:Permission">
      <ref name="attlist.Permission"/>
      <zeroOrMore>
        <ref name="UML.PermissionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Permission" combine="interleave">
    <ref name="UML.PermissionAtts"/>
  </define>
  <!-- ========= UML:Comment ========= -->
  <define name="Comment.body">
    <element name="UML:Comment.body">
      <ref name="attlist.Comment.body"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment.body" combine="interleave">
    <empty/>
  </define>
  <define name="Comment.annotatedElement">
    <element name="UML:Comment.annotatedElement">
      <ref name="attlist.Comment.annotatedElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment.annotatedElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CommentFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Comment.body"/>
      <ref name="Comment.annotatedElement"/>
    </choice>
  </define>
  <define name="UML.CommentAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="body"/>
    </optional>
    <optional>
      <attribute name="annotatedElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Comment">
    <element name="UML:Comment">
      <ref name="attlist.Comment"/>
      <zeroOrMore>
        <ref name="UML.CommentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment" combine="interleave">
    <ref name="UML.CommentAtts"/>
  </define>
  <!-- ========= UML:Flow ========= -->
  <define name="Flow.target">
    <element name="UML:Flow.target">
      <ref name="attlist.Flow.target"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow.target" combine="interleave">
    <empty/>
  </define>
  <define name="Flow.source">
    <element name="UML:Flow.source">
      <ref name="attlist.Flow.source"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow.source" combine="interleave">
    <empty/>
  </define>
  <define name="UML.FlowFeatures">
    <choice>
      <ref name="UML.RelationshipFeatures"/>
      <ref name="Flow.target"/>
      <ref name="Flow.source"/>
    </choice>
  </define>
  <define name="UML.FlowAtts">
    <ref name="UML.RelationshipAtts"/>
    <optional>
      <attribute name="target">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="source">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Flow">
    <element name="UML:Flow">
      <ref name="attlist.Flow"/>
      <zeroOrMore>
        <ref name="UML.FlowFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow" combine="interleave">
    <ref name="UML.FlowAtts"/>
  </define>
  <!-- ========= UML:ElementResidence ========= -->
  <define name="ElementResidence.visibility">
    <element name="UML:ElementResidence.visibility">
      <ref name="attlist.ElementResidence.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ElementResidence.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.VisibilityKind"/>
    </attribute>
  </define>
  <define name="ElementResidence.resident">
    <element name="UML:ElementResidence.resident">
      <ref name="attlist.ElementResidence.resident"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementResidence.resident" combine="interleave">
    <empty/>
  </define>
  <define name="ElementResidence.container">
    <element name="UML:ElementResidence.container">
      <ref name="attlist.ElementResidence.container"/>
      <zeroOrMore>
        <ref name="Component"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementResidence.container" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ElementResidenceFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="ElementResidence.visibility"/>
      <ref name="ElementResidence.resident"/>
      <ref name="ElementResidence.container"/>
    </choice>
  </define>
  <define name="UML.ElementResidenceAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="visibility">
        <ref name="UML.VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="container">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ElementResidence">
    <element name="UML:ElementResidence">
      <ref name="attlist.ElementResidence"/>
      <zeroOrMore>
        <ref name="UML.ElementResidenceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementResidence" combine="interleave">
    <ref name="UML.ElementResidenceAtts"/>
  </define>
  <!-- ========= UML:TemplateParameter ========= -->
  <define name="TemplateParameter.template">
    <element name="UML:TemplateParameter.template">
      <ref name="attlist.TemplateParameter.template"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.template" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateParameter.parameter">
    <element name="UML:TemplateParameter.parameter">
      <ref name="attlist.TemplateParameter.parameter"/>
      <zeroOrMore>
        <choice>
          <ref name="ModelElement"/>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
          <ref name="AttributeLink"/>
          <ref name="Link"/>
          <ref name="LinkEnd"/>
          <ref name="Stimulus"/>
          <ref name="Procedure"/>
          <ref name="ExtensionPoint"/>
          <ref name="StateMachine"/>
          <ref name="ActivityGraph"/>
          <ref name="Event"/>
          <ref name="TimeEvent"/>
          <ref name="CallEvent"/>
          <ref name="SignalEvent"/>
          <ref name="ChangeEvent"/>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
          <ref name="Transition"/>
          <ref name="Guard"/>
          <ref name="Message"/>
          <ref name="Interaction"/>
          <ref name="InteractionInstanceSet"/>
          <ref name="CollaborationInstanceSet"/>
          <ref name="Partition"/>
          <ref name="Variable"/>
          <ref name="ArgumentSpecification"/>
          <ref name="PrimitiveFunction"/>
          <ref name="ControlFlow"/>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
          <ref name="DataFlow"/>
          <ref name="Pin"/>
          <ref name="InputPin"/>
          <ref name="OutputPin"/>
          <ref name="GeneralizableElement"/>
          <ref name="Collaboration"/>
          <ref name="Classifier"/>
          <ref name="Signal"/>
          <ref name="Exception"/>
          <ref name="UseCase"/>
          <ref name="Actor"/>
          <ref name="ClassifierRole"/>
          <ref name="ClassifierInState"/>
          <ref name="Class"/>
          <ref name="AssociationClass"/>
          <ref name="DataType"/>
          <ref name="Primitive"/>
          <ref name="Enumeration"/>
          <ref name="ProgrammingLanguageDataType"/>
          <ref name="Interface"/>
          <ref name="Component"/>
          <ref name="Node"/>
          <ref name="Artifact"/>
          <ref name="Subsystem"/>
          <ref name="Association"/>
          <ref name="AssociationRole"/>
          <ref name="Stereotype"/>
          <ref name="Package"/>
          <ref name="Model"/>
          <ref name="Namespace"/>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Reception"/>
          <ref name="Operation"/>
          <ref name="Method"/>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
          <ref name="Constraint"/>
          <ref name="Relationship"/>
          <ref name="Extend"/>
          <ref name="Include"/>
          <ref name="Generalization"/>
          <ref name="Dependency"/>
          <ref name="Abstraction"/>
          <ref name="Usage"/>
          <ref name="Binding"/>
          <ref name="Permission"/>
          <ref name="Flow"/>
          <ref name="Parameter"/>
          <ref name="Comment"/>
          <ref name="EnumerationLiteral"/>
          <ref name="TagDefinition"/>
          <ref name="TaggedValue"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateParameter.defaultElement">
    <element name="UML:TemplateParameter.defaultElement">
      <ref name="attlist.TemplateParameter.defaultElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.defaultElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TemplateParameterFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="TemplateParameter.template"/>
      <ref name="TemplateParameter.parameter"/>
      <ref name="TemplateParameter.defaultElement"/>
    </choice>
  </define>
  <define name="UML.TemplateParameterAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="template">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="defaultElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TemplateParameter">
    <element name="UML:TemplateParameter">
      <ref name="attlist.TemplateParameter"/>
      <zeroOrMore>
        <ref name="UML.TemplateParameterFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter" combine="interleave">
    <ref name="UML.TemplateParameterAtts"/>
  </define>
  <!-- ========= UML:Primitive ========= -->
  <define name="UML.PrimitiveFeatures">
    <ref name="UML.DataTypeFeatures"/>
  </define>
  <define name="UML.PrimitiveAtts">
    <ref name="UML.DataTypeAtts"/>
  </define>
  <define name="Primitive">
    <element name="UML:Primitive">
      <ref name="attlist.Primitive"/>
      <zeroOrMore>
        <ref name="UML.PrimitiveFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Primitive" combine="interleave">
    <ref name="UML.PrimitiveAtts"/>
  </define>
  <!-- ========= UML:Enumeration ========= -->
  <define name="Enumeration.literal">
    <element name="UML:Enumeration.literal">
      <ref name="attlist.Enumeration.literal"/>
      <zeroOrMore>
        <ref name="EnumerationLiteral"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Enumeration.literal" combine="interleave">
    <empty/>
  </define>
  <define name="UML.EnumerationFeatures">
    <choice>
      <ref name="UML.DataTypeFeatures"/>
      <ref name="Enumeration.literal"/>
    </choice>
  </define>
  <define name="UML.EnumerationAtts">
    <ref name="UML.DataTypeAtts"/>
  </define>
  <define name="Enumeration">
    <element name="UML:Enumeration">
      <ref name="attlist.Enumeration"/>
      <zeroOrMore>
        <ref name="UML.EnumerationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Enumeration" combine="interleave">
    <ref name="UML.EnumerationAtts"/>
  </define>
  <!-- ========= UML:EnumerationLiteral ========= -->
  <define name="EnumerationLiteral.enumeration">
    <element name="UML:EnumerationLiteral.enumeration">
      <ref name="attlist.EnumerationLiteral.enumeration"/>
      <zeroOrMore>
        <ref name="Enumeration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.EnumerationLiteral.enumeration" combine="interleave">
    <empty/>
  </define>
  <define name="UML.EnumerationLiteralFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="EnumerationLiteral.enumeration"/>
    </choice>
  </define>
  <define name="UML.EnumerationLiteralAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="enumeration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="EnumerationLiteral">
    <element name="UML:EnumerationLiteral">
      <ref name="attlist.EnumerationLiteral"/>
      <zeroOrMore>
        <ref name="UML.EnumerationLiteralFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.EnumerationLiteral" combine="interleave">
    <ref name="UML.EnumerationLiteralAtts"/>
  </define>
  <!-- ========= UML:Stereotype ========= -->
  <define name="Stereotype.icon">
    <element name="UML:Stereotype.icon">
      <ref name="attlist.Stereotype.icon"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.icon" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.baseClass">
    <element name="UML:Stereotype.baseClass">
      <ref name="attlist.Stereotype.baseClass"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.baseClass" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.definedTag">
    <element name="UML:Stereotype.definedTag">
      <ref name="attlist.Stereotype.definedTag"/>
      <zeroOrMore>
        <ref name="TagDefinition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.definedTag" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.stereotypeConstraint">
    <element name="UML:Stereotype.stereotypeConstraint">
      <ref name="attlist.Stereotype.stereotypeConstraint"/>
      <zeroOrMore>
        <ref name="Constraint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.stereotypeConstraint" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StereotypeFeatures">
    <choice>
      <ref name="UML.GeneralizableElementFeatures"/>
      <ref name="Stereotype.icon"/>
      <ref name="Stereotype.baseClass"/>
      <ref name="Stereotype.definedTag"/>
      <ref name="Stereotype.stereotypeConstraint"/>
    </choice>
  </define>
  <define name="UML.StereotypeAtts">
    <ref name="UML.GeneralizableElementAtts"/>
    <optional>
      <attribute name="icon"/>
    </optional>
  </define>
  <define name="Stereotype">
    <element name="UML:Stereotype">
      <ref name="attlist.Stereotype"/>
      <zeroOrMore>
        <ref name="UML.StereotypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype" combine="interleave">
    <ref name="UML.StereotypeAtts"/>
  </define>
  <!-- ========= UML:TagDefinition ========= -->
  <define name="TagDefinition.tagType">
    <element name="UML:TagDefinition.tagType">
      <ref name="attlist.TagDefinition.tagType"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.tagType" combine="interleave">
    <empty/>
  </define>
  <define name="TagDefinition.multiplicity">
    <element name="UML:TagDefinition.multiplicity">
      <ref name="attlist.TagDefinition.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="TagDefinition.owner">
    <element name="UML:TagDefinition.owner">
      <ref name="attlist.TagDefinition.owner"/>
      <zeroOrMore>
        <ref name="Stereotype"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.owner" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TagDefinitionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="TagDefinition.tagType"/>
      <ref name="TagDefinition.multiplicity"/>
      <ref name="TagDefinition.owner"/>
    </choice>
  </define>
  <define name="UML.TagDefinitionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="tagType"/>
    </optional>
    <optional>
      <attribute name="owner">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TagDefinition">
    <element name="UML:TagDefinition">
      <ref name="attlist.TagDefinition"/>
      <zeroOrMore>
        <ref name="UML.TagDefinitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition" combine="interleave">
    <ref name="UML.TagDefinitionAtts"/>
  </define>
  <!-- ========= UML:TaggedValue ========= -->
  <define name="TaggedValue.dataValue">
    <element name="UML:TaggedValue.dataValue">
      <ref name="attlist.TaggedValue.dataValue"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.dataValue" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.modelElement">
    <element name="UML:TaggedValue.modelElement">
      <ref name="attlist.TaggedValue.modelElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.modelElement" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.type">
    <element name="UML:TaggedValue.type">
      <ref name="attlist.TaggedValue.type"/>
      <zeroOrMore>
        <ref name="TagDefinition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.type" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.referenceValue">
    <element name="UML:TaggedValue.referenceValue">
      <ref name="attlist.TaggedValue.referenceValue"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.referenceValue" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TaggedValueFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="TaggedValue.dataValue"/>
      <ref name="TaggedValue.modelElement"/>
      <ref name="TaggedValue.type"/>
      <ref name="TaggedValue.referenceValue"/>
    </choice>
  </define>
  <define name="UML.TaggedValueAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="modelElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="referenceValue">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TaggedValue">
    <element name="UML:TaggedValue">
      <ref name="attlist.TaggedValue"/>
      <zeroOrMore>
        <ref name="UML.TaggedValueFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue" combine="interleave">
    <ref name="UML.TaggedValueAtts"/>
  </define>
  <!-- ========= UML:ProgrammingLanguageDataType ========= -->
  <define name="ProgrammingLanguageDataType.expression">
    <element name="UML:ProgrammingLanguageDataType.expression">
      <ref name="attlist.ProgrammingLanguageDataType.expression"/>
      <zeroOrMore>
        <ref name="TypeExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProgrammingLanguageDataType.expression" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ProgrammingLanguageDataTypeFeatures">
    <choice>
      <ref name="UML.DataTypeFeatures"/>
      <ref name="ProgrammingLanguageDataType.expression"/>
    </choice>
  </define>
  <define name="UML.ProgrammingLanguageDataTypeAtts">
    <ref name="UML.DataTypeAtts"/>
  </define>
  <define name="ProgrammingLanguageDataType">
    <element name="UML:ProgrammingLanguageDataType">
      <ref name="attlist.ProgrammingLanguageDataType"/>
      <zeroOrMore>
        <ref name="UML.ProgrammingLanguageDataTypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProgrammingLanguageDataType" combine="interleave">
    <ref name="UML.ProgrammingLanguageDataTypeAtts"/>
  </define>
  <!-- ========= UML:Artifact ========= -->
  <define name="UML.ArtifactFeatures">
    <ref name="UML.ClassifierFeatures"/>
  </define>
  <define name="UML.ArtifactAtts">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <define name="Artifact">
    <element name="UML:Artifact">
      <ref name="attlist.Artifact"/>
      <zeroOrMore>
        <ref name="UML.ArtifactFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Artifact" combine="interleave">
    <ref name="UML.ArtifactAtts"/>
  </define>
  <!-- ========= UML:TemplateArgument ========= -->
  <define name="TemplateArgument.modelElement">
    <element name="UML:TemplateArgument.modelElement">
      <ref name="attlist.TemplateArgument.modelElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument.modelElement" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateArgument.binding">
    <element name="UML:TemplateArgument.binding">
      <ref name="attlist.TemplateArgument.binding"/>
      <zeroOrMore>
        <ref name="Binding"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument.binding" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TemplateArgumentFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="TemplateArgument.modelElement"/>
      <ref name="TemplateArgument.binding"/>
    </choice>
  </define>
  <define name="UML.TemplateArgumentAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="modelElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="binding">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TemplateArgument">
    <element name="UML:TemplateArgument">
      <ref name="attlist.TemplateArgument"/>
      <zeroOrMore>
        <ref name="UML.TemplateArgumentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument" combine="interleave">
    <ref name="UML.TemplateArgumentAtts"/>
  </define>
  <!-- ========= UML:Common_Behavior ========= -->
  <!-- ========= UML:Instance ========= -->
  <define name="Instance.classifier">
    <element name="UML:Instance.classifier">
      <ref name="attlist.Instance.classifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.classifier" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.linkEnd">
    <element name="UML:Instance.linkEnd">
      <ref name="attlist.Instance.linkEnd"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.linkEnd" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.slot">
    <element name="UML:Instance.slot">
      <ref name="attlist.Instance.slot"/>
      <zeroOrMore>
        <ref name="AttributeLink"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.slot" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.componentInstance">
    <element name="UML:Instance.componentInstance">
      <ref name="attlist.Instance.componentInstance"/>
      <zeroOrMore>
        <ref name="ComponentInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.componentInstance" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.ownedInstance">
    <element name="UML:Instance.ownedInstance">
      <ref name="attlist.Instance.ownedInstance"/>
      <zeroOrMore>
        <choice>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.ownedInstance" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.ownedLink">
    <element name="UML:Instance.ownedLink">
      <ref name="attlist.Instance.ownedLink"/>
      <zeroOrMore>
        <choice>
          <ref name="Link"/>
          <ref name="LinkObject"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.ownedLink" combine="interleave">
    <empty/>
  </define>
  <define name="UML.InstanceFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Instance.classifier"/>
      <ref name="Instance.linkEnd"/>
      <ref name="Instance.slot"/>
      <ref name="Instance.componentInstance"/>
      <ref name="Instance.ownedInstance"/>
      <ref name="Instance.ownedLink"/>
    </choice>
  </define>
  <define name="UML.InstanceAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="classifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="linkEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="componentInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Instance">
    <element name="UML:Instance">
      <ref name="attlist.Instance"/>
      <zeroOrMore>
        <ref name="UML.InstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance" combine="interleave">
    <ref name="UML.InstanceAtts"/>
  </define>
  <!-- ========= UML:Signal ========= -->
  <define name="UML.SignalFeatures">
    <ref name="UML.ClassifierFeatures"/>
  </define>
  <define name="UML.SignalAtts">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <define name="Signal">
    <element name="UML:Signal">
      <ref name="attlist.Signal"/>
      <zeroOrMore>
        <ref name="UML.SignalFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Signal" combine="interleave">
    <ref name="UML.SignalAtts"/>
  </define>
  <!-- ========= UML:UninterpretedAction ========= -->
  <define name="UML.UninterpretedActionFeatures">
    <ref name="XMI.extension"/>
  </define>
  <define name="UML.UninterpretedActionAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <define name="UninterpretedAction">
    <element name="UML:UninterpretedAction">
      <ref name="attlist.UninterpretedAction"/>
      <zeroOrMore>
        <ref name="UML.UninterpretedActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UninterpretedAction" combine="interleave">
    <ref name="UML.UninterpretedActionAtts"/>
  </define>
  <!-- ========= UML:AttributeLink ========= -->
  <define name="AttributeLink.attribute">
    <element name="UML:AttributeLink.attribute">
      <ref name="attlist.AttributeLink.attribute"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.attribute" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.value">
    <element name="UML:AttributeLink.value">
      <ref name="attlist.AttributeLink.value"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.value" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.instance">
    <element name="UML:AttributeLink.instance">
      <ref name="attlist.AttributeLink.instance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.instance" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.linkEnd">
    <element name="UML:AttributeLink.linkEnd">
      <ref name="attlist.AttributeLink.linkEnd"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.linkEnd" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AttributeLinkFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="AttributeLink.attribute"/>
      <ref name="AttributeLink.value"/>
      <ref name="AttributeLink.instance"/>
      <ref name="AttributeLink.linkEnd"/>
    </choice>
  </define>
  <define name="UML.AttributeLinkAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="attribute">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="value">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="instance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="linkEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AttributeLink">
    <element name="UML:AttributeLink">
      <ref name="attlist.AttributeLink"/>
      <zeroOrMore>
        <ref name="UML.AttributeLinkFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink" combine="interleave">
    <ref name="UML.AttributeLinkAtts"/>
  </define>
  <!-- ========= UML:Object ========= -->
  <define name="UML.ObjectFeatures">
    <ref name="UML.InstanceFeatures"/>
  </define>
  <define name="UML.ObjectAtts">
    <ref name="UML.InstanceAtts"/>
  </define>
  <define name="Object">
    <element name="UML:Object">
      <ref name="attlist.Object"/>
      <zeroOrMore>
        <ref name="UML.ObjectFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Object" combine="interleave">
    <ref name="UML.ObjectAtts"/>
  </define>
  <!-- ========= UML:Link ========= -->
  <define name="Link.association">
    <element name="UML:Link.association">
      <ref name="attlist.Link.association"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link.association" combine="interleave">
    <empty/>
  </define>
  <define name="Link.connection">
    <element name="UML:Link.connection">
      <ref name="attlist.Link.connection"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link.connection" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LinkFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Link.association"/>
      <ref name="Link.connection"/>
    </choice>
  </define>
  <define name="UML.LinkAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Link">
    <element name="UML:Link">
      <ref name="attlist.Link"/>
      <zeroOrMore>
        <ref name="UML.LinkFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link" combine="interleave">
    <ref name="UML.LinkAtts"/>
  </define>
  <!-- ========= UML:LinkObject ========= -->
  <define name="UML.LinkObjectFeatures">
    <choice>
      <ref name="UML.ObjectFeatures"/>
      <ref name="Link.association"/>
      <ref name="Link.connection"/>
    </choice>
  </define>
  <define name="UML.LinkObjectAtts">
    <ref name="UML.ObjectAtts"/>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LinkObject">
    <element name="UML:LinkObject">
      <ref name="attlist.LinkObject"/>
      <zeroOrMore>
        <ref name="UML.LinkObjectFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkObject" combine="interleave">
    <ref name="UML.LinkObjectAtts"/>
  </define>
  <!-- ========= UML:DataValue ========= -->
  <define name="UML.DataValueFeatures">
    <ref name="UML.InstanceFeatures"/>
  </define>
  <define name="UML.DataValueAtts">
    <ref name="UML.InstanceAtts"/>
  </define>
  <define name="DataValue">
    <element name="UML:DataValue">
      <ref name="attlist.DataValue"/>
      <zeroOrMore>
        <ref name="UML.DataValueFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataValue" combine="interleave">
    <ref name="UML.DataValueAtts"/>
  </define>
  <!-- ========= UML:Reception ========= -->
  <define name="Reception.specification">
    <element name="UML:Reception.specification">
      <ref name="attlist.Reception.specification"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception.specification" combine="interleave">
    <empty/>
  </define>
  <define name="Reception.isRoot">
    <element name="UML:Reception.isRoot">
      <ref name="attlist.Reception.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.isLeaf">
    <element name="UML:Reception.isLeaf">
      <ref name="attlist.Reception.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.isAbstract">
    <element name="UML:Reception.isAbstract">
      <ref name="attlist.Reception.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.signal">
    <element name="UML:Reception.signal">
      <ref name="attlist.Reception.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception.signal" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ReceptionFeatures">
    <choice>
      <ref name="UML.BehavioralFeatureFeatures"/>
      <ref name="Reception.specification"/>
      <ref name="Reception.isRoot"/>
      <ref name="Reception.isLeaf"/>
      <ref name="Reception.isAbstract"/>
      <ref name="Reception.signal"/>
    </choice>
  </define>
  <define name="UML.ReceptionAtts">
    <ref name="UML.BehavioralFeatureAtts"/>
    <optional>
      <attribute name="specification"/>
    </optional>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Reception">
    <element name="UML:Reception">
      <ref name="attlist.Reception"/>
      <zeroOrMore>
        <ref name="UML.ReceptionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception" combine="interleave">
    <ref name="UML.ReceptionAtts"/>
  </define>
  <!-- ========= UML:LinkEnd ========= -->
  <define name="LinkEnd.instance">
    <element name="UML:LinkEnd.instance">
      <ref name="attlist.LinkEnd.instance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.instance" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.link">
    <element name="UML:LinkEnd.link">
      <ref name="attlist.LinkEnd.link"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.link" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.associationEnd">
    <element name="UML:LinkEnd.associationEnd">
      <ref name="attlist.LinkEnd.associationEnd"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.associationEnd" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.qualifiedValue">
    <element name="UML:LinkEnd.qualifiedValue">
      <ref name="attlist.LinkEnd.qualifiedValue"/>
      <zeroOrMore>
        <ref name="AttributeLink"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.qualifiedValue" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LinkEndFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="LinkEnd.instance"/>
      <ref name="LinkEnd.link"/>
      <ref name="LinkEnd.associationEnd"/>
      <ref name="LinkEnd.qualifiedValue"/>
    </choice>
  </define>
  <define name="UML.LinkEndAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="instance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="link">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="associationEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LinkEnd">
    <element name="UML:LinkEnd">
      <ref name="attlist.LinkEnd"/>
      <zeroOrMore>
        <ref name="UML.LinkEndFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd" combine="interleave">
    <ref name="UML.LinkEndAtts"/>
  </define>
  <!-- ========= UML:TerminateAction ========= -->
  <define name="UML.TerminateActionFeatures">
    <ref name="XMI.extension"/>
  </define>
  <define name="UML.TerminateActionAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
  </define>
  <define name="TerminateAction">
    <element name="UML:TerminateAction">
      <ref name="attlist.TerminateAction"/>
      <zeroOrMore>
        <ref name="UML.TerminateActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TerminateAction" combine="interleave">
    <ref name="UML.TerminateActionAtts"/>
  </define>
  <!-- ========= UML:Stimulus ========= -->
  <define name="Stimulus.argument">
    <element name="UML:Stimulus.argument">
      <ref name="attlist.Stimulus.argument"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.argument" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.sender">
    <element name="UML:Stimulus.sender">
      <ref name="attlist.Stimulus.sender"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.sender" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.receiver">
    <element name="UML:Stimulus.receiver">
      <ref name="attlist.Stimulus.receiver"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.receiver" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.communicationLink">
    <element name="UML:Stimulus.communicationLink">
      <ref name="attlist.Stimulus.communicationLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.communicationLink" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.dispatchAction">
    <element name="UML:Stimulus.dispatchAction">
      <ref name="attlist.Stimulus.dispatchAction"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.dispatchAction" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StimulusFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Stimulus.argument"/>
      <ref name="Stimulus.sender"/>
      <ref name="Stimulus.receiver"/>
      <ref name="Stimulus.communicationLink"/>
      <ref name="Stimulus.dispatchAction"/>
    </choice>
  </define>
  <define name="UML.StimulusAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="argument">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sender">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="receiver">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="communicationLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="dispatchAction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Stimulus">
    <element name="UML:Stimulus">
      <ref name="attlist.Stimulus"/>
      <zeroOrMore>
        <ref name="UML.StimulusFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus" combine="interleave">
    <ref name="UML.StimulusAtts"/>
  </define>
  <!-- ========= UML:Exception ========= -->
  <define name="UML.ExceptionFeatures">
    <ref name="UML.SignalFeatures"/>
  </define>
  <define name="UML.ExceptionAtts">
    <ref name="UML.SignalAtts"/>
  </define>
  <define name="Exception">
    <element name="UML:Exception">
      <ref name="attlist.Exception"/>
      <zeroOrMore>
        <ref name="UML.ExceptionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Exception" combine="interleave">
    <ref name="UML.ExceptionAtts"/>
  </define>
  <!-- ========= UML:ComponentInstance ========= -->
  <define name="ComponentInstance.nodeInstance">
    <element name="UML:ComponentInstance.nodeInstance">
      <ref name="attlist.ComponentInstance.nodeInstance"/>
      <zeroOrMore>
        <ref name="NodeInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance.nodeInstance" combine="interleave">
    <empty/>
  </define>
  <define name="ComponentInstance.resident">
    <element name="UML:ComponentInstance.resident">
      <ref name="attlist.ComponentInstance.resident"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance.resident" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ComponentInstanceFeatures">
    <choice>
      <ref name="UML.InstanceFeatures"/>
      <ref name="ComponentInstance.nodeInstance"/>
      <ref name="ComponentInstance.resident"/>
    </choice>
  </define>
  <define name="UML.ComponentInstanceAtts">
    <ref name="UML.InstanceAtts"/>
    <optional>
      <attribute name="nodeInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ComponentInstance">
    <element name="UML:ComponentInstance">
      <ref name="attlist.ComponentInstance"/>
      <zeroOrMore>
        <ref name="UML.ComponentInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance" combine="interleave">
    <ref name="UML.ComponentInstanceAtts"/>
  </define>
  <!-- ========= UML:NodeInstance ========= -->
  <define name="NodeInstance.resident">
    <element name="UML:NodeInstance.resident">
      <ref name="attlist.NodeInstance.resident"/>
      <zeroOrMore>
        <ref name="ComponentInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.NodeInstance.resident" combine="interleave">
    <empty/>
  </define>
  <define name="UML.NodeInstanceFeatures">
    <choice>
      <ref name="UML.InstanceFeatures"/>
      <ref name="NodeInstance.resident"/>
    </choice>
  </define>
  <define name="UML.NodeInstanceAtts">
    <ref name="UML.InstanceAtts"/>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="NodeInstance">
    <element name="UML:NodeInstance">
      <ref name="attlist.NodeInstance"/>
      <zeroOrMore>
        <ref name="UML.NodeInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.NodeInstance" combine="interleave">
    <ref name="UML.NodeInstanceAtts"/>
  </define>
  <!-- ========= UML:SubsystemInstance ========= -->
  <define name="UML.SubsystemInstanceFeatures">
    <ref name="UML.InstanceFeatures"/>
  </define>
  <define name="UML.SubsystemInstanceAtts">
    <ref name="UML.InstanceAtts"/>
  </define>
  <define name="SubsystemInstance">
    <element name="UML:SubsystemInstance">
      <ref name="attlist.SubsystemInstance"/>
      <zeroOrMore>
        <ref name="UML.SubsystemInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubsystemInstance" combine="interleave">
    <ref name="UML.SubsystemInstanceAtts"/>
  </define>
  <!-- ========= UML:Procedure ========= -->
  <define name="Procedure.language">
    <element name="UML:Procedure.language">
      <ref name="attlist.Procedure.language"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Procedure.language" combine="interleave">
    <empty/>
  </define>
  <define name="Procedure.body">
    <element name="UML:Procedure.body">
      <ref name="attlist.Procedure.body"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Procedure.body" combine="interleave">
    <empty/>
  </define>
  <define name="Procedure.isList">
    <element name="UML:Procedure.isList">
      <ref name="attlist.Procedure.isList"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Procedure.isList" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Procedure.expression">
    <element name="UML:Procedure.expression">
      <ref name="attlist.Procedure.expression"/>
      <zeroOrMore>
        <ref name="Expression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Procedure.expression" combine="interleave">
    <empty/>
  </define>
  <define name="Procedure.method">
    <element name="UML:Procedure.method">
      <ref name="attlist.Procedure.method"/>
      <zeroOrMore>
        <ref name="Method"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Procedure.method" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ProcedureFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Procedure.language"/>
      <ref name="Procedure.body"/>
      <ref name="Procedure.isList"/>
      <ref name="Procedure.expression"/>
      <ref name="Procedure.method"/>
    </choice>
  </define>
  <define name="UML.ProcedureAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="language"/>
    </optional>
    <optional>
      <attribute name="body"/>
    </optional>
    <optional>
      <attribute name="isList">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="expression">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="method">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Procedure">
    <element name="UML:Procedure">
      <ref name="attlist.Procedure"/>
      <zeroOrMore>
        <ref name="UML.ProcedureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Procedure" combine="interleave">
    <ref name="UML.ProcedureAtts"/>
  </define>
  <!-- ========= UML:A_context_raisedSignal ========= -->
  <define name="A_context_raisedSignal.context">
    <element name="UML:A_context_raisedSignal.context">
      <ref name="attlist.A_context_raisedSignal.context"/>
      <optional>
        <ref name="BehavioralFeature"/>
      </optional>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal.context" combine="interleave">
    <empty/>
  </define>
  <define name="A_context_raisedSignal.raisedSignal">
    <element name="UML:A_context_raisedSignal.raisedSignal">
      <ref name="attlist.A_context_raisedSignal.raisedSignal"/>
      <optional>
        <ref name="Signal"/>
      </optional>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal.raisedSignal" combine="interleave">
    <empty/>
  </define>
  <define name="A_context_raisedSignal">
    <element name="UML:A_context_raisedSignal">
      <ref name="attlist.A_context_raisedSignal"/>
      <zeroOrMore>
        <choice>
          <ref name="A_context_raisedSignal.context"/>
          <ref name="A_context_raisedSignal.raisedSignal"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal" combine="interleave">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="raisedSignal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <!-- ========= UML:Action_Foundation ========= -->
  <!-- ========= UML:ControlFlow ========= -->
  <define name="ControlFlow.predecessor">
    <element name="UML:ControlFlow.predecessor">
      <ref name="attlist.ControlFlow.predecessor"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ControlFlow.predecessor" combine="interleave">
    <empty/>
  </define>
  <define name="ControlFlow.successor">
    <element name="UML:ControlFlow.successor">
      <ref name="attlist.ControlFlow.successor"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ControlFlow.successor" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ControlFlowFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="ControlFlow.predecessor"/>
      <ref name="ControlFlow.successor"/>
    </choice>
  </define>
  <define name="UML.ControlFlowAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="predecessor">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="successor">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ControlFlow">
    <element name="UML:ControlFlow">
      <ref name="attlist.ControlFlow"/>
      <zeroOrMore>
        <ref name="UML.ControlFlowFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ControlFlow" combine="interleave">
    <ref name="UML.ControlFlowAtts"/>
  </define>
  <!-- ========= UML:Action ========= -->
  <define name="Action.isReadOnly">
    <element name="UML:Action.isReadOnly">
      <ref name="attlist.Action.isReadOnly"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Action.isReadOnly" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Action.consequent">
    <element name="UML:Action.consequent">
      <ref name="attlist.Action.consequent"/>
      <zeroOrMore>
        <ref name="ControlFlow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.consequent" combine="interleave">
    <empty/>
  </define>
  <define name="Action.antecedent">
    <element name="UML:Action.antecedent">
      <ref name="attlist.Action.antecedent"/>
      <zeroOrMore>
        <ref name="ControlFlow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.antecedent" combine="interleave">
    <empty/>
  </define>
  <define name="Action.outputPin">
    <element name="UML:Action.outputPin">
      <ref name="attlist.Action.outputPin"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.outputPin" combine="interleave">
    <empty/>
  </define>
  <define name="Action.inputPin">
    <element name="UML:Action.inputPin">
      <ref name="attlist.Action.inputPin"/>
      <zeroOrMore>
        <ref name="InputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.inputPin" combine="interleave">
    <empty/>
  </define>
  <define name="Action.procedure">
    <element name="UML:Action.procedure">
      <ref name="attlist.Action.procedure"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.procedure" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ActionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Action.isReadOnly"/>
      <ref name="Action.consequent"/>
      <ref name="Action.antecedent"/>
      <ref name="Action.outputPin"/>
      <ref name="Action.inputPin"/>
      <ref name="Action.procedure"/>
    </choice>
  </define>
  <define name="UML.ActionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="isReadOnly">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="consequent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="antecedent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="procedure">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Action">
    <element name="UML:Action">
      <ref name="attlist.Action"/>
      <zeroOrMore>
        <ref name="UML.ActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action" combine="interleave">
    <ref name="UML.ActionAtts"/>
  </define>
  <!-- ========= UML:PrimitiveAction ========= -->
  <define name="UML.PrimitiveActionFeatures">
    <ref name="UML.ActionFeatures"/>
  </define>
  <define name="UML.PrimitiveActionAtts">
    <ref name="UML.ActionAtts"/>
  </define>
  <define name="PrimitiveAction">
    <element name="UML:PrimitiveAction">
      <ref name="attlist.PrimitiveAction"/>
      <zeroOrMore>
        <ref name="UML.PrimitiveActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveAction" combine="interleave">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <!-- ========= UML:Pin ========= -->
  <define name="Pin.multiplicity">
    <element name="UML:Pin.multiplicity">
      <ref name="attlist.Pin.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Pin.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="Pin.ordering">
    <element name="UML:Pin.ordering">
      <ref name="attlist.Pin.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Pin.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.OrderingKind"/>
    </attribute>
  </define>
  <define name="Pin.type">
    <element name="UML:Pin.type">
      <ref name="attlist.Pin.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Pin.type" combine="interleave">
    <empty/>
  </define>
  <define name="UML.PinFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Pin.multiplicity"/>
      <ref name="Pin.ordering"/>
      <ref name="Pin.type"/>
    </choice>
  </define>
  <define name="UML.PinAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="ordering">
        <ref name="UML.OrderingKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Pin">
    <element name="UML:Pin">
      <ref name="attlist.Pin"/>
      <zeroOrMore>
        <ref name="UML.PinFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Pin" combine="interleave">
    <ref name="UML.PinAtts"/>
  </define>
  <!-- ========= UML:InputPin ========= -->
  <define name="InputPin.flow">
    <element name="UML:InputPin.flow">
      <ref name="attlist.InputPin.flow"/>
      <zeroOrMore>
        <ref name="DataFlow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InputPin.flow" combine="interleave">
    <empty/>
  </define>
  <define name="InputPin.procedure">
    <element name="UML:InputPin.procedure">
      <ref name="attlist.InputPin.procedure"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InputPin.procedure" combine="interleave">
    <empty/>
  </define>
  <define name="InputPin.action">
    <element name="UML:InputPin.action">
      <ref name="attlist.InputPin.action"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InputPin.action" combine="interleave">
    <empty/>
  </define>
  <define name="UML.InputPinFeatures">
    <choice>
      <ref name="UML.PinFeatures"/>
      <ref name="InputPin.flow"/>
      <ref name="InputPin.procedure"/>
      <ref name="InputPin.action"/>
    </choice>
  </define>
  <define name="UML.InputPinAtts">
    <ref name="UML.PinAtts"/>
    <optional>
      <attribute name="flow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="procedure">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="action">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="InputPin">
    <element name="UML:InputPin">
      <ref name="attlist.InputPin"/>
      <zeroOrMore>
        <ref name="UML.InputPinFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InputPin" combine="interleave">
    <ref name="UML.InputPinAtts"/>
  </define>
  <!-- ========= UML:DataFlow ========= -->
  <define name="DataFlow.source">
    <element name="UML:DataFlow.source">
      <ref name="attlist.DataFlow.source"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataFlow.source" combine="interleave">
    <empty/>
  </define>
  <define name="DataFlow.destination">
    <element name="UML:DataFlow.destination">
      <ref name="attlist.DataFlow.destination"/>
      <zeroOrMore>
        <ref name="InputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataFlow.destination" combine="interleave">
    <empty/>
  </define>
  <define name="UML.DataFlowFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="DataFlow.source"/>
      <ref name="DataFlow.destination"/>
    </choice>
  </define>
  <define name="UML.DataFlowAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="source">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="destination">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="DataFlow">
    <element name="UML:DataFlow">
      <ref name="attlist.DataFlow"/>
      <zeroOrMore>
        <ref name="UML.DataFlowFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataFlow" combine="interleave">
    <ref name="UML.DataFlowAtts"/>
  </define>
  <!-- ========= UML:OutputPin ========= -->
  <define name="OutputPin.flow">
    <element name="UML:OutputPin.flow">
      <ref name="attlist.OutputPin.flow"/>
      <zeroOrMore>
        <ref name="DataFlow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.OutputPin.flow" combine="interleave">
    <empty/>
  </define>
  <define name="OutputPin.procedure">
    <element name="UML:OutputPin.procedure">
      <ref name="attlist.OutputPin.procedure"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.OutputPin.procedure" combine="interleave">
    <empty/>
  </define>
  <define name="OutputPin.action">
    <element name="UML:OutputPin.action">
      <ref name="attlist.OutputPin.action"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.OutputPin.action" combine="interleave">
    <empty/>
  </define>
  <define name="UML.OutputPinFeatures">
    <choice>
      <ref name="UML.PinFeatures"/>
      <ref name="OutputPin.flow"/>
      <ref name="OutputPin.procedure"/>
      <ref name="OutputPin.action"/>
    </choice>
  </define>
  <define name="UML.OutputPinAtts">
    <ref name="UML.PinAtts"/>
    <optional>
      <attribute name="flow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="procedure">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="action">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="OutputPin">
    <element name="UML:OutputPin">
      <ref name="attlist.OutputPin"/>
      <zeroOrMore>
        <ref name="UML.OutputPinFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.OutputPin" combine="interleave">
    <ref name="UML.OutputPinAtts"/>
  </define>
  <!-- ========= UML:Actions ========= -->
  <!-- ========= UML:CollectionAction ========= -->
  <define name="CollectionAction.subaction">
    <element name="UML:CollectionAction.subaction">
      <ref name="attlist.CollectionAction.subaction"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollectionAction.subaction" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CollectionActionFeatures">
    <choice>
      <ref name="UML.ActionFeatures"/>
      <ref name="CollectionAction.subaction"/>
    </choice>
  </define>
  <define name="UML.CollectionActionAtts">
    <ref name="UML.ActionAtts"/>
    <optional>
      <attribute name="subaction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CollectionAction">
    <element name="UML:CollectionAction">
      <ref name="attlist.CollectionAction"/>
      <zeroOrMore>
        <ref name="UML.CollectionActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollectionAction" combine="interleave">
    <ref name="UML.CollectionActionAtts"/>
  </define>
  <!-- ========= UML:FilterAction ========= -->
  <define name="FilterAction.subinput">
    <element name="UML:FilterAction.subinput">
      <ref name="attlist.FilterAction.subinput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.FilterAction.subinput" combine="interleave">
    <empty/>
  </define>
  <define name="FilterAction.subtest">
    <element name="UML:FilterAction.subtest">
      <ref name="attlist.FilterAction.subtest"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.FilterAction.subtest" combine="interleave">
    <empty/>
  </define>
  <define name="UML.FilterActionFeatures">
    <choice>
      <ref name="UML.CollectionActionFeatures"/>
      <ref name="FilterAction.subinput"/>
      <ref name="FilterAction.subtest"/>
    </choice>
  </define>
  <define name="UML.FilterActionAtts">
    <ref name="UML.CollectionActionAtts"/>
    <optional>
      <attribute name="subtest">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="FilterAction">
    <element name="UML:FilterAction">
      <ref name="attlist.FilterAction"/>
      <zeroOrMore>
        <ref name="UML.FilterActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.FilterAction" combine="interleave">
    <ref name="UML.FilterActionAtts"/>
  </define>
  <!-- ========= UML:IterateAction ========= -->
  <define name="IterateAction.subinput">
    <element name="UML:IterateAction.subinput">
      <ref name="attlist.IterateAction.subinput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.IterateAction.subinput" combine="interleave">
    <empty/>
  </define>
  <define name="IterateAction.loopVariable">
    <element name="UML:IterateAction.loopVariable">
      <ref name="attlist.IterateAction.loopVariable"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.IterateAction.loopVariable" combine="interleave">
    <empty/>
  </define>
  <define name="IterateAction.suboutput">
    <element name="UML:IterateAction.suboutput">
      <ref name="attlist.IterateAction.suboutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.IterateAction.suboutput" combine="interleave">
    <empty/>
  </define>
  <define name="IterateAction.isUnordered">
    <element name="UML:IterateAction.isUnordered">
      <ref name="attlist.IterateAction.isUnordered"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.IterateAction.isUnordered" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.IterateActionFeatures">
    <choice>
      <ref name="UML.CollectionActionFeatures"/>
      <ref name="IterateAction.subinput"/>
      <ref name="IterateAction.loopVariable"/>
      <ref name="IterateAction.suboutput"/>
      <ref name="IterateAction.isUnordered"/>
    </choice>
  </define>
  <define name="UML.IterateActionAtts">
    <ref name="UML.CollectionActionAtts"/>
    <optional>
      <attribute name="subinput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="suboutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isUnordered">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="IterateAction">
    <element name="UML:IterateAction">
      <ref name="attlist.IterateAction"/>
      <zeroOrMore>
        <ref name="UML.IterateActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.IterateAction" combine="interleave">
    <ref name="UML.IterateActionAtts"/>
  </define>
  <!-- ========= UML:MapAction ========= -->
  <define name="MapAction.subinput">
    <element name="UML:MapAction.subinput">
      <ref name="attlist.MapAction.subinput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MapAction.subinput" combine="interleave">
    <empty/>
  </define>
  <define name="MapAction.suboutput">
    <element name="UML:MapAction.suboutput">
      <ref name="attlist.MapAction.suboutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MapAction.suboutput" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MapActionFeatures">
    <choice>
      <ref name="UML.CollectionActionFeatures"/>
      <ref name="MapAction.subinput"/>
      <ref name="MapAction.suboutput"/>
    </choice>
  </define>
  <define name="UML.MapActionAtts">
    <ref name="UML.CollectionActionAtts"/>
    <optional>
      <attribute name="suboutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="MapAction">
    <element name="UML:MapAction">
      <ref name="attlist.MapAction"/>
      <zeroOrMore>
        <ref name="UML.MapActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MapAction" combine="interleave">
    <ref name="UML.MapActionAtts"/>
  </define>
  <!-- ========= UML:ReduceAction ========= -->
  <define name="ReduceAction.leftSubinput">
    <element name="UML:ReduceAction.leftSubinput">
      <ref name="attlist.ReduceAction.leftSubinput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReduceAction.leftSubinput" combine="interleave">
    <empty/>
  </define>
  <define name="ReduceAction.suboutput">
    <element name="UML:ReduceAction.suboutput">
      <ref name="attlist.ReduceAction.suboutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReduceAction.suboutput" combine="interleave">
    <empty/>
  </define>
  <define name="ReduceAction.rightSubinput">
    <element name="UML:ReduceAction.rightSubinput">
      <ref name="attlist.ReduceAction.rightSubinput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReduceAction.rightSubinput" combine="interleave">
    <empty/>
  </define>
  <define name="ReduceAction.isUnordered">
    <element name="UML:ReduceAction.isUnordered">
      <ref name="attlist.ReduceAction.isUnordered"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ReduceAction.isUnordered" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.ReduceActionFeatures">
    <choice>
      <ref name="UML.CollectionActionFeatures"/>
      <ref name="ReduceAction.leftSubinput"/>
      <ref name="ReduceAction.suboutput"/>
      <ref name="ReduceAction.rightSubinput"/>
      <ref name="ReduceAction.isUnordered"/>
    </choice>
  </define>
  <define name="UML.ReduceActionAtts">
    <ref name="UML.CollectionActionAtts"/>
    <optional>
      <attribute name="suboutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isUnordered">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ReduceAction">
    <element name="UML:ReduceAction">
      <ref name="attlist.ReduceAction"/>
      <zeroOrMore>
        <ref name="UML.ReduceActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReduceAction" combine="interleave">
    <ref name="UML.ReduceActionAtts"/>
  </define>
  <!-- ========= UML:Clause ========= -->
  <define name="Clause.body">
    <element name="UML:Clause.body">
      <ref name="attlist.Clause.body"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.body" combine="interleave">
    <empty/>
  </define>
  <define name="Clause.test">
    <element name="UML:Clause.test">
      <ref name="attlist.Clause.test"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.test" combine="interleave">
    <empty/>
  </define>
  <define name="Clause.bodyOutput">
    <element name="UML:Clause.bodyOutput">
      <ref name="attlist.Clause.bodyOutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.bodyOutput" combine="interleave">
    <empty/>
  </define>
  <define name="Clause.testOutput">
    <element name="UML:Clause.testOutput">
      <ref name="attlist.Clause.testOutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.testOutput" combine="interleave">
    <empty/>
  </define>
  <define name="Clause.successorClause">
    <element name="UML:Clause.successorClause">
      <ref name="attlist.Clause.successorClause"/>
      <zeroOrMore>
        <ref name="Clause"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.successorClause" combine="interleave">
    <empty/>
  </define>
  <define name="Clause.predecessorClause">
    <element name="UML:Clause.predecessorClause">
      <ref name="attlist.Clause.predecessorClause"/>
      <zeroOrMore>
        <ref name="Clause"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause.predecessorClause" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ClauseFeatures">
    <choice>
      <ref name="UML.ElementFeatures"/>
      <ref name="Clause.body"/>
      <ref name="Clause.test"/>
      <ref name="Clause.bodyOutput"/>
      <ref name="Clause.testOutput"/>
      <ref name="Clause.successorClause"/>
      <ref name="Clause.predecessorClause"/>
    </choice>
  </define>
  <define name="UML.ClauseAtts">
    <ref name="UML.ElementAtts"/>
    <optional>
      <attribute name="bodyOutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="testOutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="successorClause">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="predecessorClause">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Clause">
    <element name="UML:Clause">
      <ref name="attlist.Clause"/>
      <zeroOrMore>
        <ref name="UML.ClauseFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Clause" combine="interleave">
    <ref name="UML.ClauseAtts"/>
  </define>
  <!-- ========= UML:ConditionalAction ========= -->
  <define name="ConditionalAction.clause">
    <element name="UML:ConditionalAction.clause">
      <ref name="attlist.ConditionalAction.clause"/>
      <zeroOrMore>
        <ref name="Clause"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ConditionalAction.clause" combine="interleave">
    <empty/>
  </define>
  <define name="ConditionalAction.isDeterminate">
    <element name="UML:ConditionalAction.isDeterminate">
      <ref name="attlist.ConditionalAction.isDeterminate"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ConditionalAction.isDeterminate" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.ConditionalActionFeatures">
    <choice>
      <ref name="UML.ActionFeatures"/>
      <ref name="ConditionalAction.clause"/>
      <ref name="ConditionalAction.isDeterminate"/>
    </choice>
  </define>
  <define name="UML.ConditionalActionAtts">
    <ref name="UML.ActionAtts"/>
    <optional>
      <attribute name="isDeterminate">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ConditionalAction">
    <element name="UML:ConditionalAction">
      <ref name="attlist.ConditionalAction"/>
      <zeroOrMore>
        <ref name="UML.ConditionalActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ConditionalAction" combine="interleave">
    <ref name="UML.ConditionalActionAtts"/>
  </define>
  <!-- ========= UML:GroupAction ========= -->
  <define name="GroupAction.subaction">
    <element name="UML:GroupAction.subaction">
      <ref name="attlist.GroupAction.subaction"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GroupAction.subaction" combine="interleave">
    <empty/>
  </define>
  <define name="GroupAction.variable">
    <element name="UML:GroupAction.variable">
      <ref name="attlist.GroupAction.variable"/>
      <zeroOrMore>
        <ref name="Variable"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GroupAction.variable" combine="interleave">
    <empty/>
  </define>
  <define name="GroupAction.mustIsolate">
    <element name="UML:GroupAction.mustIsolate">
      <ref name="attlist.GroupAction.mustIsolate"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GroupAction.mustIsolate" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.GroupActionFeatures">
    <choice>
      <ref name="UML.ActionFeatures"/>
      <ref name="GroupAction.subaction"/>
      <ref name="GroupAction.variable"/>
      <ref name="GroupAction.mustIsolate"/>
    </choice>
  </define>
  <define name="UML.GroupActionAtts">
    <ref name="UML.ActionAtts"/>
    <optional>
      <attribute name="mustIsolate">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="GroupAction">
    <element name="UML:GroupAction">
      <ref name="attlist.GroupAction"/>
      <zeroOrMore>
        <ref name="UML.GroupActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GroupAction" combine="interleave">
    <ref name="UML.GroupActionAtts"/>
  </define>
  <!-- ========= UML:LoopAction ========= -->
  <define name="LoopAction.clause">
    <element name="UML:LoopAction.clause">
      <ref name="attlist.LoopAction.clause"/>
      <zeroOrMore>
        <ref name="Clause"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LoopAction.clause" combine="interleave">
    <empty/>
  </define>
  <define name="LoopAction.loopVariable">
    <element name="UML:LoopAction.loopVariable">
      <ref name="attlist.LoopAction.loopVariable"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LoopAction.loopVariable" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LoopActionFeatures">
    <choice>
      <ref name="UML.ActionFeatures"/>
      <ref name="LoopAction.clause"/>
      <ref name="LoopAction.loopVariable"/>
    </choice>
  </define>
  <define name="UML.LoopActionAtts">
    <ref name="UML.ActionAtts"/>
  </define>
  <define name="LoopAction">
    <element name="UML:LoopAction">
      <ref name="attlist.LoopAction"/>
      <zeroOrMore>
        <ref name="UML.LoopActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LoopAction" combine="interleave">
    <ref name="UML.LoopActionAtts"/>
  </define>
  <!-- ========= UML:Variable ========= -->
  <define name="Variable.type">
    <element name="UML:Variable.type">
      <ref name="attlist.Variable.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Variable.type" combine="interleave">
    <empty/>
  </define>
  <define name="Variable.scope">
    <element name="UML:Variable.scope">
      <ref name="attlist.Variable.scope"/>
      <zeroOrMore>
        <ref name="GroupAction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Variable.scope" combine="interleave">
    <empty/>
  </define>
  <define name="Variable.multiplicity">
    <element name="UML:Variable.multiplicity">
      <ref name="attlist.Variable.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Variable.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="Variable.ordering">
    <element name="UML:Variable.ordering">
      <ref name="attlist.Variable.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Variable.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.OrderingKind"/>
    </attribute>
  </define>
  <define name="UML.VariableFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Variable.type"/>
      <ref name="Variable.scope"/>
      <ref name="Variable.multiplicity"/>
      <ref name="Variable.ordering"/>
    </choice>
  </define>
  <define name="UML.VariableAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="scope">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="UML.OrderingKind"/>
      </attribute>
    </optional>
  </define>
  <define name="Variable">
    <element name="UML:Variable">
      <ref name="attlist.Variable"/>
      <zeroOrMore>
        <ref name="UML.VariableFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Variable" combine="interleave">
    <ref name="UML.VariableAtts"/>
  </define>
  <!-- ========= UML:ApplyFunctionAction ========= -->
  <define name="ApplyFunctionAction.function">
    <element name="UML:ApplyFunctionAction.function">
      <ref name="attlist.ApplyFunctionAction.function"/>
      <zeroOrMore>
        <ref name="PrimitiveFunction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ApplyFunctionAction.function" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ApplyFunctionActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ApplyFunctionAction.function"/>
    </choice>
  </define>
  <define name="UML.ApplyFunctionActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="function">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ApplyFunctionAction">
    <element name="UML:ApplyFunctionAction">
      <ref name="attlist.ApplyFunctionAction"/>
      <zeroOrMore>
        <ref name="UML.ApplyFunctionActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ApplyFunctionAction" combine="interleave">
    <ref name="UML.ApplyFunctionActionAtts"/>
  </define>
  <!-- ========= UML:ArgumentSpecification ========= -->
  <define name="ArgumentSpecification.type">
    <element name="UML:ArgumentSpecification.type">
      <ref name="attlist.ArgumentSpecification.type"/>
      <zeroOrMore>
        <ref name="DataType"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ArgumentSpecification.type" combine="interleave">
    <empty/>
  </define>
  <define name="ArgumentSpecification.multiplicity">
    <element name="UML:ArgumentSpecification.multiplicity">
      <ref name="attlist.ArgumentSpecification.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ArgumentSpecification.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="ArgumentSpecification.ordering">
    <element name="UML:ArgumentSpecification.ordering">
      <ref name="attlist.ArgumentSpecification.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ArgumentSpecification.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.OrderingKind"/>
    </attribute>
  </define>
  <define name="UML.ArgumentSpecificationFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="ArgumentSpecification.type"/>
      <ref name="ArgumentSpecification.multiplicity"/>
      <ref name="ArgumentSpecification.ordering"/>
    </choice>
  </define>
  <define name="UML.ArgumentSpecificationAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="UML.OrderingKind"/>
      </attribute>
    </optional>
  </define>
  <define name="ArgumentSpecification">
    <element name="UML:ArgumentSpecification">
      <ref name="attlist.ArgumentSpecification"/>
      <zeroOrMore>
        <ref name="UML.ArgumentSpecificationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ArgumentSpecification" combine="interleave">
    <ref name="UML.ArgumentSpecificationAtts"/>
  </define>
  <!-- ========= UML:CodeAction ========= -->
  <define name="CodeAction.language">
    <element name="UML:CodeAction.language">
      <ref name="attlist.CodeAction.language"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CodeAction.language" combine="interleave">
    <empty/>
  </define>
  <define name="CodeAction.encoding">
    <element name="UML:CodeAction.encoding">
      <ref name="attlist.CodeAction.encoding"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CodeAction.encoding" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CodeActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="CodeAction.language"/>
      <ref name="CodeAction.encoding"/>
    </choice>
  </define>
  <define name="UML.CodeActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="language"/>
    </optional>
    <optional>
      <attribute name="encoding"/>
    </optional>
  </define>
  <define name="CodeAction">
    <element name="UML:CodeAction">
      <ref name="attlist.CodeAction"/>
      <zeroOrMore>
        <ref name="UML.CodeActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CodeAction" combine="interleave">
    <ref name="UML.CodeActionAtts"/>
  </define>
  <!-- ========= UML:LiteralValueAction ========= -->
  <define name="LiteralValueAction.value">
    <element name="UML:LiteralValueAction.value">
      <ref name="attlist.LiteralValueAction.value"/>
      <zeroOrMore>
        <ref name="DataValue"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LiteralValueAction.value" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LiteralValueActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="LiteralValueAction.value"/>
    </choice>
  </define>
  <define name="UML.LiteralValueActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="value">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LiteralValueAction">
    <element name="UML:LiteralValueAction">
      <ref name="attlist.LiteralValueAction"/>
      <zeroOrMore>
        <ref name="UML.LiteralValueActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LiteralValueAction" combine="interleave">
    <ref name="UML.LiteralValueActionAtts"/>
  </define>
  <!-- ========= UML:MarshalAction ========= -->
  <define name="MarshalAction.marshalType">
    <element name="UML:MarshalAction.marshalType">
      <ref name="attlist.MarshalAction.marshalType"/>
      <zeroOrMore>
        <ref name="Class"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MarshalAction.marshalType" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MarshalActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="MarshalAction.marshalType"/>
    </choice>
  </define>
  <define name="UML.MarshalActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="marshalType">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="MarshalAction">
    <element name="UML:MarshalAction">
      <ref name="attlist.MarshalAction"/>
      <zeroOrMore>
        <ref name="UML.MarshalActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MarshalAction" combine="interleave">
    <ref name="UML.MarshalActionAtts"/>
  </define>
  <!-- ========= UML:NullAction ========= -->
  <define name="UML.NullActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.NullActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="NullAction">
    <element name="UML:NullAction">
      <ref name="attlist.NullAction"/>
      <zeroOrMore>
        <ref name="UML.NullActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.NullAction" combine="interleave">
    <ref name="UML.NullActionAtts"/>
  </define>
  <!-- ========= UML:PrimitiveFunction ========= -->
  <define name="PrimitiveFunction.inputSpec">
    <element name="UML:PrimitiveFunction.inputSpec">
      <ref name="attlist.PrimitiveFunction.inputSpec"/>
      <zeroOrMore>
        <ref name="ArgumentSpecification"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveFunction.inputSpec" combine="interleave">
    <empty/>
  </define>
  <define name="PrimitiveFunction.outputSpec">
    <element name="UML:PrimitiveFunction.outputSpec">
      <ref name="attlist.PrimitiveFunction.outputSpec"/>
      <zeroOrMore>
        <ref name="ArgumentSpecification"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveFunction.outputSpec" combine="interleave">
    <empty/>
  </define>
  <define name="PrimitiveFunction.language">
    <element name="UML:PrimitiveFunction.language">
      <ref name="attlist.PrimitiveFunction.language"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveFunction.language" combine="interleave">
    <empty/>
  </define>
  <define name="PrimitiveFunction.encoding">
    <element name="UML:PrimitiveFunction.encoding">
      <ref name="attlist.PrimitiveFunction.encoding"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveFunction.encoding" combine="interleave">
    <empty/>
  </define>
  <define name="UML.PrimitiveFunctionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="PrimitiveFunction.inputSpec"/>
      <ref name="PrimitiveFunction.outputSpec"/>
      <ref name="PrimitiveFunction.language"/>
      <ref name="PrimitiveFunction.encoding"/>
    </choice>
  </define>
  <define name="UML.PrimitiveFunctionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="inputSpec">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="outputSpec">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="language"/>
    </optional>
    <optional>
      <attribute name="encoding"/>
    </optional>
  </define>
  <define name="PrimitiveFunction">
    <element name="UML:PrimitiveFunction">
      <ref name="attlist.PrimitiveFunction"/>
      <zeroOrMore>
        <ref name="UML.PrimitiveFunctionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PrimitiveFunction" combine="interleave">
    <ref name="UML.PrimitiveFunctionAtts"/>
  </define>
  <!-- ========= UML:TestIdentityAction ========= -->
  <define name="UML.TestIdentityActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.TestIdentityActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="TestIdentityAction">
    <element name="UML:TestIdentityAction">
      <ref name="attlist.TestIdentityAction"/>
      <zeroOrMore>
        <ref name="UML.TestIdentityActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TestIdentityAction" combine="interleave">
    <ref name="UML.TestIdentityActionAtts"/>
  </define>
  <!-- ========= UML:UnmarshalAction ========= -->
  <define name="UnmarshalAction.unmarshalType">
    <element name="UML:UnmarshalAction.unmarshalType">
      <ref name="attlist.UnmarshalAction.unmarshalType"/>
      <zeroOrMore>
        <ref name="Class"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UnmarshalAction.unmarshalType" combine="interleave">
    <empty/>
  </define>
  <define name="UML.UnmarshalActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="UnmarshalAction.unmarshalType"/>
    </choice>
  </define>
  <define name="UML.UnmarshalActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="unmarshalType">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="UnmarshalAction">
    <element name="UML:UnmarshalAction">
      <ref name="attlist.UnmarshalAction"/>
      <zeroOrMore>
        <ref name="UML.UnmarshalActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UnmarshalAction" combine="interleave">
    <ref name="UML.UnmarshalActionAtts"/>
  </define>
  <!-- ========= UML:JumpHandler ========= -->
  <define name="JumpHandler.protectedAction">
    <element name="UML:JumpHandler.protectedAction">
      <ref name="attlist.JumpHandler.protectedAction"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpHandler.protectedAction" combine="interleave">
    <empty/>
  </define>
  <define name="JumpHandler.jumpType">
    <element name="UML:JumpHandler.jumpType">
      <ref name="attlist.JumpHandler.jumpType"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpHandler.jumpType" combine="interleave">
    <empty/>
  </define>
  <define name="JumpHandler.body">
    <element name="UML:JumpHandler.body">
      <ref name="attlist.JumpHandler.body"/>
      <zeroOrMore>
        <ref name="HandlerAction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpHandler.body" combine="interleave">
    <empty/>
  </define>
  <define name="UML.JumpHandlerFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="JumpHandler.protectedAction"/>
      <ref name="JumpHandler.jumpType"/>
      <ref name="JumpHandler.body"/>
    </choice>
  </define>
  <define name="UML.JumpHandlerAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="protectedAction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="jumpType">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="body">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="JumpHandler">
    <element name="UML:JumpHandler">
      <ref name="attlist.JumpHandler"/>
      <zeroOrMore>
        <ref name="UML.JumpHandlerFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpHandler" combine="interleave">
    <ref name="UML.JumpHandlerAtts"/>
  </define>
  <!-- ========= UML:HandlerAction ========= -->
  <define name="HandlerAction.handlerOutput">
    <element name="UML:HandlerAction.handlerOutput">
      <ref name="attlist.HandlerAction.handlerOutput"/>
      <zeroOrMore>
        <ref name="OutputPin"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.HandlerAction.handlerOutput" combine="interleave">
    <empty/>
  </define>
  <define name="HandlerAction.body">
    <element name="UML:HandlerAction.body">
      <ref name="attlist.HandlerAction.body"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CollectionAction"/>
          <ref name="FilterAction"/>
          <ref name="IterateAction"/>
          <ref name="MapAction"/>
          <ref name="ReduceAction"/>
          <ref name="ConditionalAction"/>
          <ref name="GroupAction"/>
          <ref name="LoopAction"/>
          <ref name="HandlerAction"/>
          <ref name="PrimitiveAction"/>
          <ref name="ApplyFunctionAction"/>
          <ref name="CodeAction"/>
          <ref name="LiteralValueAction"/>
          <ref name="MarshalAction"/>
          <ref name="NullAction"/>
          <ref name="TestIdentityAction"/>
          <ref name="UnmarshalAction"/>
          <ref name="JumpAction"/>
          <ref name="InvocationAction"/>
          <ref name="AsynchronousInvocationAction"/>
          <ref name="SynchronousInvocationAction"/>
          <ref name="ClearAssociationAction"/>
          <ref name="LinkAction"/>
          <ref name="ReadLinkAction"/>
          <ref name="WriteLinkAction"/>
          <ref name="CreateLinkAction"/>
          <ref name="CreateLinkObjectAction"/>
          <ref name="DestroyLinkAction"/>
          <ref name="ReadLinkObjectEndAction"/>
          <ref name="ReadLinkObjectQualifierAction"/>
          <ref name="AttributeAction"/>
          <ref name="ClearAttributeAction"/>
          <ref name="ReadAttributeAction"/>
          <ref name="WriteAttributeAction"/>
          <ref name="AddAttributeValueAction"/>
          <ref name="RemoveAttributeValueAction"/>
          <ref name="CreateObjectAction"/>
          <ref name="DestroyObjectAction"/>
          <ref name="ReadIsClassifiedObjectAction"/>
          <ref name="ReclassifyObjectAction"/>
          <ref name="ReadExtentAction"/>
          <ref name="ReadSelfAction"/>
          <ref name="StartObjectStateMachineAction"/>
          <ref name="VariableAction"/>
          <ref name="ClearVariableAction"/>
          <ref name="ReadVariableAction"/>
          <ref name="WriteVariableAction"/>
          <ref name="AddVariableValueAction"/>
          <ref name="RemoveVariableValueAction"/>
          <ref name="ExplicitInvocationActtion"/>
          <ref name="CallOperationAction"/>
          <ref name="SendSignalAction"/>
          <ref name="BroadcastSignalAction"/>
          <ref name="CallProcedureAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.HandlerAction.body" combine="interleave">
    <empty/>
  </define>
  <define name="UML.HandlerActionFeatures">
    <choice>
      <ref name="UML.ActionFeatures"/>
      <ref name="HandlerAction.handlerOutput"/>
      <ref name="HandlerAction.body"/>
    </choice>
  </define>
  <define name="UML.HandlerActionAtts">
    <ref name="UML.ActionAtts"/>
    <optional>
      <attribute name="handlerOutput">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="HandlerAction">
    <element name="UML:HandlerAction">
      <ref name="attlist.HandlerAction"/>
      <zeroOrMore>
        <ref name="UML.HandlerActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.HandlerAction" combine="interleave">
    <ref name="UML.HandlerActionAtts"/>
  </define>
  <!-- ========= UML:JumpAction ========= -->
  <define name="JumpAction.exception">
    <element name="UML:JumpAction.exception">
      <ref name="attlist.JumpAction.exception"/>
      <zeroOrMore>
        <ref name="Exception"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpAction.exception" combine="interleave">
    <empty/>
  </define>
  <define name="UML.JumpActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="JumpAction.exception"/>
    </choice>
  </define>
  <define name="UML.JumpActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="exception">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="JumpAction">
    <element name="UML:JumpAction">
      <ref name="attlist.JumpAction"/>
      <zeroOrMore>
        <ref name="UML.JumpActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.JumpAction" combine="interleave">
    <ref name="UML.JumpActionAtts"/>
  </define>
  <!-- ========= UML:InvocationAction ========= -->
  <define name="UML.InvocationActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.InvocationActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="InvocationAction">
    <element name="UML:InvocationAction">
      <ref name="attlist.InvocationAction"/>
      <zeroOrMore>
        <ref name="UML.InvocationActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InvocationAction" combine="interleave">
    <ref name="UML.InvocationActionAtts"/>
  </define>
  <!-- ========= UML:AsynchronousInvocationAction ========= -->
  <define name="AsynchronousInvocationAction.isRepliable">
    <element name="UML:AsynchronousInvocationAction.isRepliable">
      <ref name="attlist.AsynchronousInvocationAction.isRepliable"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AsynchronousInvocationAction.isRepliable" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.AsynchronousInvocationActionFeatures">
    <choice>
      <ref name="UML.InvocationActionFeatures"/>
      <ref name="AsynchronousInvocationAction.isRepliable"/>
    </choice>
  </define>
  <define name="UML.AsynchronousInvocationActionAtts">
    <ref name="UML.InvocationActionAtts"/>
    <optional>
      <attribute name="isRepliable">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="AsynchronousInvocationAction">
    <element name="UML:AsynchronousInvocationAction">
      <ref name="attlist.AsynchronousInvocationAction"/>
      <zeroOrMore>
        <ref name="UML.AsynchronousInvocationActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AsynchronousInvocationAction" combine="interleave">
    <ref name="UML.AsynchronousInvocationActionAtts"/>
  </define>
  <!-- ========= UML:ExplicitInvocationActtion ========= -->
  <define name="UML.ExplicitInvocationActtionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.ExplicitInvocationActtionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="ExplicitInvocationActtion">
    <element name="UML:ExplicitInvocationActtion">
      <ref name="attlist.ExplicitInvocationActtion"/>
      <zeroOrMore>
        <ref name="UML.ExplicitInvocationActtionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExplicitInvocationActtion" combine="interleave">
    <ref name="UML.ExplicitInvocationActtionAtts"/>
  </define>
  <!-- ========= UML:CallOperationAction ========= -->
  <define name="CallOperationAction.operation">
    <element name="UML:CallOperationAction.operation">
      <ref name="attlist.CallOperationAction.operation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallOperationAction.operation" combine="interleave">
    <empty/>
  </define>
  <define name="CallOperationAction.isAsynchronous">
    <element name="UML:CallOperationAction.isAsynchronous">
      <ref name="attlist.CallOperationAction.isAsynchronous"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.CallOperationAction.isAsynchronous" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.CallOperationActionFeatures">
    <choice>
      <ref name="UML.ExplicitInvocationActtionFeatures"/>
      <ref name="CallOperationAction.operation"/>
      <ref name="CallOperationAction.isAsynchronous"/>
    </choice>
  </define>
  <define name="UML.CallOperationActionAtts">
    <ref name="UML.ExplicitInvocationActtionAtts"/>
    <optional>
      <attribute name="operation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAsynchronous">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="CallOperationAction">
    <element name="UML:CallOperationAction">
      <ref name="attlist.CallOperationAction"/>
      <zeroOrMore>
        <ref name="UML.CallOperationActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallOperationAction" combine="interleave">
    <ref name="UML.CallOperationActionAtts"/>
  </define>
  <!-- ========= UML:SynchronousInvocationAction ========= -->
  <define name="UML.SynchronousInvocationActionFeatures">
    <ref name="UML.InvocationActionFeatures"/>
  </define>
  <define name="UML.SynchronousInvocationActionAtts">
    <ref name="UML.InvocationActionAtts"/>
  </define>
  <define name="SynchronousInvocationAction">
    <element name="UML:SynchronousInvocationAction">
      <ref name="attlist.SynchronousInvocationAction"/>
      <zeroOrMore>
        <ref name="UML.SynchronousInvocationActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SynchronousInvocationAction" combine="interleave">
    <ref name="UML.SynchronousInvocationActionAtts"/>
  </define>
  <!-- ========= UML:ClearAssociationAction ========= -->
  <define name="ClearAssociationAction.association">
    <element name="UML:ClearAssociationAction.association">
      <ref name="attlist.ClearAssociationAction.association"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClearAssociationAction.association" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ClearAssociationActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ClearAssociationAction.association"/>
    </choice>
  </define>
  <define name="UML.ClearAssociationActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ClearAssociationAction">
    <element name="UML:ClearAssociationAction">
      <ref name="attlist.ClearAssociationAction"/>
      <zeroOrMore>
        <ref name="UML.ClearAssociationActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClearAssociationAction" combine="interleave">
    <ref name="UML.ClearAssociationActionAtts"/>
  </define>
  <!-- ========= UML:LinkAction ========= -->
  <define name="LinkAction.endData">
    <element name="UML:LinkAction.endData">
      <ref name="attlist.LinkAction.endData"/>
      <zeroOrMore>
        <choice>
          <ref name="LinkEndData"/>
          <ref name="LinkEndCreationData"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkAction.endData" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LinkActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="LinkAction.endData"/>
    </choice>
  </define>
  <define name="UML.LinkActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="LinkAction">
    <element name="UML:LinkAction">
      <ref name="attlist.LinkAction"/>
      <zeroOrMore>
        <ref name="UML.LinkActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkAction" combine="interleave">
    <ref name="UML.LinkActionAtts"/>
  </define>
  <!-- ========= UML:WriteLinkAction ========= -->
  <define name="UML.WriteLinkActionFeatures">
    <ref name="UML.LinkActionFeatures"/>
  </define>
  <define name="UML.WriteLinkActionAtts">
    <ref name="UML.LinkActionAtts"/>
  </define>
  <define name="WriteLinkAction">
    <element name="UML:WriteLinkAction">
      <ref name="attlist.WriteLinkAction"/>
      <zeroOrMore>
        <ref name="UML.WriteLinkActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.WriteLinkAction" combine="interleave">
    <ref name="UML.WriteLinkActionAtts"/>
  </define>
  <!-- ========= UML:CreateLinkAction ========= -->
  <define name="UML.CreateLinkActionFeatures">
    <ref name="UML.WriteLinkActionFeatures"/>
  </define>
  <define name="UML.CreateLinkActionAtts">
    <ref name="UML.WriteLinkActionAtts"/>
  </define>
  <define name="CreateLinkAction">
    <element name="UML:CreateLinkAction">
      <ref name="attlist.CreateLinkAction"/>
      <zeroOrMore>
        <ref name="UML.CreateLinkActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateLinkAction" combine="interleave">
    <ref name="UML.CreateLinkActionAtts"/>
  </define>
  <!-- ========= UML:CreateLinkObjectAction ========= -->
  <define name="UML.CreateLinkObjectActionFeatures">
    <ref name="UML.CreateLinkActionFeatures"/>
  </define>
  <define name="UML.CreateLinkObjectActionAtts">
    <ref name="UML.CreateLinkActionAtts"/>
  </define>
  <define name="CreateLinkObjectAction">
    <element name="UML:CreateLinkObjectAction">
      <ref name="attlist.CreateLinkObjectAction"/>
      <zeroOrMore>
        <ref name="UML.CreateLinkObjectActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateLinkObjectAction" combine="interleave">
    <ref name="UML.CreateLinkObjectActionAtts"/>
  </define>
  <!-- ========= UML:DestroyLinkAction ========= -->
  <define name="UML.DestroyLinkActionFeatures">
    <ref name="UML.WriteLinkActionFeatures"/>
  </define>
  <define name="UML.DestroyLinkActionAtts">
    <ref name="UML.WriteLinkActionAtts"/>
  </define>
  <define name="DestroyLinkAction">
    <element name="UML:DestroyLinkAction">
      <ref name="attlist.DestroyLinkAction"/>
      <zeroOrMore>
        <ref name="UML.DestroyLinkActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DestroyLinkAction" combine="interleave">
    <ref name="UML.DestroyLinkActionAtts"/>
  </define>
  <!-- ========= UML:LinkEndData ========= -->
  <define name="LinkEndData.end">
    <element name="UML:LinkEndData.end">
      <ref name="attlist.LinkEndData.end"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEndData.end" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEndData.qualifier">
    <element name="UML:LinkEndData.qualifier">
      <ref name="attlist.LinkEndData.qualifier"/>
      <zeroOrMore>
        <ref name="QualifierValue"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEndData.qualifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.LinkEndDataFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="LinkEndData.end"/>
      <ref name="LinkEndData.qualifier"/>
    </choice>
  </define>
  <define name="UML.LinkEndDataAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="end">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LinkEndData">
    <element name="UML:LinkEndData">
      <ref name="attlist.LinkEndData"/>
      <zeroOrMore>
        <ref name="UML.LinkEndDataFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEndData" combine="interleave">
    <ref name="UML.LinkEndDataAtts"/>
  </define>
  <!-- ========= UML:LinkEndCreationData ========= -->
  <define name="LinkEndCreationData.isReplaceAll">
    <element name="UML:LinkEndCreationData.isReplaceAll">
      <ref name="attlist.LinkEndCreationData.isReplaceAll"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.LinkEndCreationData.isReplaceAll" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.LinkEndCreationDataFeatures">
    <choice>
      <ref name="UML.LinkEndDataFeatures"/>
      <ref name="LinkEndCreationData.isReplaceAll"/>
    </choice>
  </define>
  <define name="UML.LinkEndCreationDataAtts">
    <ref name="UML.LinkEndDataAtts"/>
    <optional>
      <attribute name="isReplaceAll">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="LinkEndCreationData">
    <element name="UML:LinkEndCreationData">
      <ref name="attlist.LinkEndCreationData"/>
      <zeroOrMore>
        <ref name="UML.LinkEndCreationDataFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEndCreationData" combine="interleave">
    <ref name="UML.LinkEndCreationDataAtts"/>
  </define>
  <!-- ========= UML:QualifierValue ========= -->
  <define name="QualifierValue.qualifier">
    <element name="UML:QualifierValue.qualifier">
      <ref name="attlist.QualifierValue.qualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.QualifierValue.qualifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.QualifierValueFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="QualifierValue.qualifier"/>
    </choice>
  </define>
  <define name="UML.QualifierValueAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="qualifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="QualifierValue">
    <element name="UML:QualifierValue">
      <ref name="attlist.QualifierValue"/>
      <zeroOrMore>
        <ref name="UML.QualifierValueFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.QualifierValue" combine="interleave">
    <ref name="UML.QualifierValueAtts"/>
  </define>
  <!-- ========= UML:ReadLinkAction ========= -->
  <define name="UML.ReadLinkActionFeatures">
    <ref name="UML.LinkActionFeatures"/>
  </define>
  <define name="UML.ReadLinkActionAtts">
    <ref name="UML.LinkActionAtts"/>
  </define>
  <define name="ReadLinkAction">
    <element name="UML:ReadLinkAction">
      <ref name="attlist.ReadLinkAction"/>
      <zeroOrMore>
        <ref name="UML.ReadLinkActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadLinkAction" combine="interleave">
    <ref name="UML.ReadLinkActionAtts"/>
  </define>
  <!-- ========= UML:ReadLinkObjectEndAction ========= -->
  <define name="ReadLinkObjectEndAction.end">
    <element name="UML:ReadLinkObjectEndAction.end">
      <ref name="attlist.ReadLinkObjectEndAction.end"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadLinkObjectEndAction.end" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ReadLinkObjectEndActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ReadLinkObjectEndAction.end"/>
    </choice>
  </define>
  <define name="UML.ReadLinkObjectEndActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="end">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ReadLinkObjectEndAction">
    <element name="UML:ReadLinkObjectEndAction">
      <ref name="attlist.ReadLinkObjectEndAction"/>
      <zeroOrMore>
        <ref name="UML.ReadLinkObjectEndActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadLinkObjectEndAction" combine="interleave">
    <ref name="UML.ReadLinkObjectEndActionAtts"/>
  </define>
  <!-- ========= UML:ReadLinkObjectQualifierAction ========= -->
  <define name="ReadLinkObjectQualifierAction.qualifier">
    <element name="UML:ReadLinkObjectQualifierAction.qualifier">
      <ref name="attlist.ReadLinkObjectQualifierAction.qualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadLinkObjectQualifierAction.qualifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ReadLinkObjectQualifierActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ReadLinkObjectQualifierAction.qualifier"/>
    </choice>
  </define>
  <define name="UML.ReadLinkObjectQualifierActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="qualifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ReadLinkObjectQualifierAction">
    <element name="UML:ReadLinkObjectQualifierAction">
      <ref name="attlist.ReadLinkObjectQualifierAction"/>
      <zeroOrMore>
        <ref name="UML.ReadLinkObjectQualifierActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadLinkObjectQualifierAction" combine="interleave">
    <ref name="UML.ReadLinkObjectQualifierActionAtts"/>
  </define>
  <!-- ========= UML:AttributeAction ========= -->
  <define name="AttributeAction.attribute">
    <element name="UML:AttributeAction.attribute">
      <ref name="attlist.AttributeAction.attribute"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeAction.attribute" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AttributeActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="AttributeAction.attribute"/>
    </choice>
  </define>
  <define name="UML.AttributeActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="attribute">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AttributeAction">
    <element name="UML:AttributeAction">
      <ref name="attlist.AttributeAction"/>
      <zeroOrMore>
        <ref name="UML.AttributeActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeAction" combine="interleave">
    <ref name="UML.AttributeActionAtts"/>
  </define>
  <!-- ========= UML:WriteAttributeAction ========= -->
  <define name="UML.WriteAttributeActionFeatures">
    <ref name="UML.AttributeActionFeatures"/>
  </define>
  <define name="UML.WriteAttributeActionAtts">
    <ref name="UML.AttributeActionAtts"/>
  </define>
  <define name="WriteAttributeAction">
    <element name="UML:WriteAttributeAction">
      <ref name="attlist.WriteAttributeAction"/>
      <zeroOrMore>
        <ref name="UML.WriteAttributeActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.WriteAttributeAction" combine="interleave">
    <ref name="UML.WriteAttributeActionAtts"/>
  </define>
  <!-- ========= UML:AddAttributeValueAction ========= -->
  <define name="AddAttributeValueAction.isReplaceAll">
    <element name="UML:AddAttributeValueAction.isReplaceAll">
      <ref name="attlist.AddAttributeValueAction.isReplaceAll"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AddAttributeValueAction.isReplaceAll" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.AddAttributeValueActionFeatures">
    <choice>
      <ref name="UML.WriteAttributeActionFeatures"/>
      <ref name="AddAttributeValueAction.isReplaceAll"/>
    </choice>
  </define>
  <define name="UML.AddAttributeValueActionAtts">
    <ref name="UML.WriteAttributeActionAtts"/>
    <optional>
      <attribute name="isReplaceAll">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="AddAttributeValueAction">
    <element name="UML:AddAttributeValueAction">
      <ref name="attlist.AddAttributeValueAction"/>
      <zeroOrMore>
        <ref name="UML.AddAttributeValueActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AddAttributeValueAction" combine="interleave">
    <ref name="UML.AddAttributeValueActionAtts"/>
  </define>
  <!-- ========= UML:ClearAttributeAction ========= -->
  <define name="UML.ClearAttributeActionFeatures">
    <ref name="UML.AttributeActionFeatures"/>
  </define>
  <define name="UML.ClearAttributeActionAtts">
    <ref name="UML.AttributeActionAtts"/>
  </define>
  <define name="ClearAttributeAction">
    <element name="UML:ClearAttributeAction">
      <ref name="attlist.ClearAttributeAction"/>
      <zeroOrMore>
        <ref name="UML.ClearAttributeActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClearAttributeAction" combine="interleave">
    <ref name="UML.ClearAttributeActionAtts"/>
  </define>
  <!-- ========= UML:ReadAttributeAction ========= -->
  <define name="UML.ReadAttributeActionFeatures">
    <ref name="UML.AttributeActionFeatures"/>
  </define>
  <define name="UML.ReadAttributeActionAtts">
    <ref name="UML.AttributeActionAtts"/>
  </define>
  <define name="ReadAttributeAction">
    <element name="UML:ReadAttributeAction">
      <ref name="attlist.ReadAttributeAction"/>
      <zeroOrMore>
        <ref name="UML.ReadAttributeActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadAttributeAction" combine="interleave">
    <ref name="UML.ReadAttributeActionAtts"/>
  </define>
  <!-- ========= UML:RemoveAttributeValueAction ========= -->
  <define name="UML.RemoveAttributeValueActionFeatures">
    <ref name="UML.WriteAttributeActionFeatures"/>
  </define>
  <define name="UML.RemoveAttributeValueActionAtts">
    <ref name="UML.WriteAttributeActionAtts"/>
  </define>
  <define name="RemoveAttributeValueAction">
    <element name="UML:RemoveAttributeValueAction">
      <ref name="attlist.RemoveAttributeValueAction"/>
      <zeroOrMore>
        <ref name="UML.RemoveAttributeValueActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.RemoveAttributeValueAction" combine="interleave">
    <ref name="UML.RemoveAttributeValueActionAtts"/>
  </define>
  <!-- ========= UML:CreateObjectAction ========= -->
  <define name="CreateObjectAction.classifier">
    <element name="UML:CreateObjectAction.classifier">
      <ref name="attlist.CreateObjectAction.classifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateObjectAction.classifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CreateObjectActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="CreateObjectAction.classifier"/>
    </choice>
  </define>
  <define name="UML.CreateObjectActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="classifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CreateObjectAction">
    <element name="UML:CreateObjectAction">
      <ref name="attlist.CreateObjectAction"/>
      <zeroOrMore>
        <ref name="UML.CreateObjectActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateObjectAction" combine="interleave">
    <ref name="UML.CreateObjectActionAtts"/>
  </define>
  <!-- ========= UML:DestroyObjectAction ========= -->
  <define name="UML.DestroyObjectActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.DestroyObjectActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="DestroyObjectAction">
    <element name="UML:DestroyObjectAction">
      <ref name="attlist.DestroyObjectAction"/>
      <zeroOrMore>
        <ref name="UML.DestroyObjectActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DestroyObjectAction" combine="interleave">
    <ref name="UML.DestroyObjectActionAtts"/>
  </define>
  <!-- ========= UML:ReadIsClassifiedObjectAction ========= -->
  <define name="ReadIsClassifiedObjectAction.classifier">
    <element name="UML:ReadIsClassifiedObjectAction.classifier">
      <ref name="attlist.ReadIsClassifiedObjectAction.classifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadIsClassifiedObjectAction.classifier" combine="interleave">
    <empty/>
  </define>
  <define name="ReadIsClassifiedObjectAction.isDirect">
    <element name="UML:ReadIsClassifiedObjectAction.isDirect">
      <ref name="attlist.ReadIsClassifiedObjectAction.isDirect"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ReadIsClassifiedObjectAction.isDirect" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.ReadIsClassifiedObjectActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ReadIsClassifiedObjectAction.classifier"/>
      <ref name="ReadIsClassifiedObjectAction.isDirect"/>
    </choice>
  </define>
  <define name="UML.ReadIsClassifiedObjectActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="classifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isDirect">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ReadIsClassifiedObjectAction">
    <element name="UML:ReadIsClassifiedObjectAction">
      <ref name="attlist.ReadIsClassifiedObjectAction"/>
      <zeroOrMore>
        <ref name="UML.ReadIsClassifiedObjectActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadIsClassifiedObjectAction" combine="interleave">
    <ref name="UML.ReadIsClassifiedObjectActionAtts"/>
  </define>
  <!-- ========= UML:ReclassifyObjectAction ========= -->
  <define name="ReclassifyObjectAction.oldClassifier">
    <element name="UML:ReclassifyObjectAction.oldClassifier">
      <ref name="attlist.ReclassifyObjectAction.oldClassifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReclassifyObjectAction.oldClassifier" combine="interleave">
    <empty/>
  </define>
  <define name="ReclassifyObjectAction.newClassifier">
    <element name="UML:ReclassifyObjectAction.newClassifier">
      <ref name="attlist.ReclassifyObjectAction.newClassifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReclassifyObjectAction.newClassifier" combine="interleave">
    <empty/>
  </define>
  <define name="ReclassifyObjectAction.isReplaceAll">
    <element name="UML:ReclassifyObjectAction.isReplaceAll">
      <ref name="attlist.ReclassifyObjectAction.isReplaceAll"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ReclassifyObjectAction.isReplaceAll" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.ReclassifyObjectActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ReclassifyObjectAction.oldClassifier"/>
      <ref name="ReclassifyObjectAction.newClassifier"/>
      <ref name="ReclassifyObjectAction.isReplaceAll"/>
    </choice>
  </define>
  <define name="UML.ReclassifyObjectActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="oldClassifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="newClassifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isReplaceAll">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ReclassifyObjectAction">
    <element name="UML:ReclassifyObjectAction">
      <ref name="attlist.ReclassifyObjectAction"/>
      <zeroOrMore>
        <ref name="UML.ReclassifyObjectActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReclassifyObjectAction" combine="interleave">
    <ref name="UML.ReclassifyObjectActionAtts"/>
  </define>
  <!-- ========= UML:ReadExtentAction ========= -->
  <define name="ReadExtentAction.classifier">
    <element name="UML:ReadExtentAction.classifier">
      <ref name="attlist.ReadExtentAction.classifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadExtentAction.classifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ReadExtentActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="ReadExtentAction.classifier"/>
    </choice>
  </define>
  <define name="UML.ReadExtentActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="classifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ReadExtentAction">
    <element name="UML:ReadExtentAction">
      <ref name="attlist.ReadExtentAction"/>
      <zeroOrMore>
        <ref name="UML.ReadExtentActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadExtentAction" combine="interleave">
    <ref name="UML.ReadExtentActionAtts"/>
  </define>
  <!-- ========= UML:ReadSelfAction ========= -->
  <define name="UML.ReadSelfActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.ReadSelfActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="ReadSelfAction">
    <element name="UML:ReadSelfAction">
      <ref name="attlist.ReadSelfAction"/>
      <zeroOrMore>
        <ref name="UML.ReadSelfActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadSelfAction" combine="interleave">
    <ref name="UML.ReadSelfActionAtts"/>
  </define>
  <!-- ========= UML:StartObjectStateMachineAction ========= -->
  <define name="UML.StartObjectStateMachineActionFeatures">
    <ref name="UML.PrimitiveActionFeatures"/>
  </define>
  <define name="UML.StartObjectStateMachineActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
  </define>
  <define name="StartObjectStateMachineAction">
    <element name="UML:StartObjectStateMachineAction">
      <ref name="attlist.StartObjectStateMachineAction"/>
      <zeroOrMore>
        <ref name="UML.StartObjectStateMachineActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StartObjectStateMachineAction" combine="interleave">
    <ref name="UML.StartObjectStateMachineActionAtts"/>
  </define>
  <!-- ========= UML:VariableAction ========= -->
  <define name="VariableAction.variable">
    <element name="UML:VariableAction.variable">
      <ref name="attlist.VariableAction.variable"/>
      <zeroOrMore>
        <ref name="Variable"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.VariableAction.variable" combine="interleave">
    <empty/>
  </define>
  <define name="UML.VariableActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="VariableAction.variable"/>
    </choice>
  </define>
  <define name="UML.VariableActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="variable">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="VariableAction">
    <element name="UML:VariableAction">
      <ref name="attlist.VariableAction"/>
      <zeroOrMore>
        <ref name="UML.VariableActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.VariableAction" combine="interleave">
    <ref name="UML.VariableActionAtts"/>
  </define>
  <!-- ========= UML:WriteVariableAction ========= -->
  <define name="UML.WriteVariableActionFeatures">
    <ref name="UML.VariableActionFeatures"/>
  </define>
  <define name="UML.WriteVariableActionAtts">
    <ref name="UML.VariableActionAtts"/>
  </define>
  <define name="WriteVariableAction">
    <element name="UML:WriteVariableAction">
      <ref name="attlist.WriteVariableAction"/>
      <zeroOrMore>
        <ref name="UML.WriteVariableActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.WriteVariableAction" combine="interleave">
    <ref name="UML.WriteVariableActionAtts"/>
  </define>
  <!-- ========= UML:AddVariableValueAction ========= -->
  <define name="AddVariableValueAction.isReplaceAll">
    <element name="UML:AddVariableValueAction.isReplaceAll">
      <ref name="attlist.AddVariableValueAction.isReplaceAll"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AddVariableValueAction.isReplaceAll" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.AddVariableValueActionFeatures">
    <choice>
      <ref name="UML.WriteVariableActionFeatures"/>
      <ref name="AddVariableValueAction.isReplaceAll"/>
    </choice>
  </define>
  <define name="UML.AddVariableValueActionAtts">
    <ref name="UML.WriteVariableActionAtts"/>
    <optional>
      <attribute name="isReplaceAll">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="AddVariableValueAction">
    <element name="UML:AddVariableValueAction">
      <ref name="attlist.AddVariableValueAction"/>
      <zeroOrMore>
        <ref name="UML.AddVariableValueActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AddVariableValueAction" combine="interleave">
    <ref name="UML.AddVariableValueActionAtts"/>
  </define>
  <!-- ========= UML:ClearVariableAction ========= -->
  <define name="UML.ClearVariableActionFeatures">
    <ref name="UML.VariableActionFeatures"/>
  </define>
  <define name="UML.ClearVariableActionAtts">
    <ref name="UML.VariableActionAtts"/>
  </define>
  <define name="ClearVariableAction">
    <element name="UML:ClearVariableAction">
      <ref name="attlist.ClearVariableAction"/>
      <zeroOrMore>
        <ref name="UML.ClearVariableActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClearVariableAction" combine="interleave">
    <ref name="UML.ClearVariableActionAtts"/>
  </define>
  <!-- ========= UML:ReadVariableAction ========= -->
  <define name="UML.ReadVariableActionFeatures">
    <ref name="UML.VariableActionFeatures"/>
  </define>
  <define name="UML.ReadVariableActionAtts">
    <ref name="UML.VariableActionAtts"/>
  </define>
  <define name="ReadVariableAction">
    <element name="UML:ReadVariableAction">
      <ref name="attlist.ReadVariableAction"/>
      <zeroOrMore>
        <ref name="UML.ReadVariableActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReadVariableAction" combine="interleave">
    <ref name="UML.ReadVariableActionAtts"/>
  </define>
  <!-- ========= UML:RemoveVariableValueAction ========= -->
  <define name="UML.RemoveVariableValueActionFeatures">
    <ref name="UML.WriteVariableActionFeatures"/>
  </define>
  <define name="UML.RemoveVariableValueActionAtts">
    <ref name="UML.WriteVariableActionAtts"/>
  </define>
  <define name="RemoveVariableValueAction">
    <element name="UML:RemoveVariableValueAction">
      <ref name="attlist.RemoveVariableValueAction"/>
      <zeroOrMore>
        <ref name="UML.RemoveVariableValueActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.RemoveVariableValueAction" combine="interleave">
    <ref name="UML.RemoveVariableValueActionAtts"/>
  </define>
  <!-- ========= UML:SendSignalAction ========= -->
  <define name="SendSignalAction.signal">
    <element name="UML:SendSignalAction.signal">
      <ref name="attlist.SendSignalAction.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SendSignalAction.signal" combine="interleave">
    <empty/>
  </define>
  <define name="UML.SendSignalActionFeatures">
    <choice>
      <ref name="UML.ExplicitInvocationActtionFeatures"/>
      <ref name="SendSignalAction.signal"/>
    </choice>
  </define>
  <define name="UML.SendSignalActionAtts">
    <ref name="UML.ExplicitInvocationActtionAtts"/>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SendSignalAction">
    <element name="UML:SendSignalAction">
      <ref name="attlist.SendSignalAction"/>
      <zeroOrMore>
        <ref name="UML.SendSignalActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SendSignalAction" combine="interleave">
    <ref name="UML.SendSignalActionAtts"/>
  </define>
  <!-- ========= UML:BroadcastSignalAction ========= -->
  <define name="BroadcastSignalAction.signal">
    <element name="UML:BroadcastSignalAction.signal">
      <ref name="attlist.BroadcastSignalAction.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BroadcastSignalAction.signal" combine="interleave">
    <empty/>
  </define>
  <define name="UML.BroadcastSignalActionFeatures">
    <choice>
      <ref name="UML.ExplicitInvocationActtionFeatures"/>
      <ref name="BroadcastSignalAction.signal"/>
    </choice>
  </define>
  <define name="UML.BroadcastSignalActionAtts">
    <ref name="UML.ExplicitInvocationActtionAtts"/>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="BroadcastSignalAction">
    <element name="UML:BroadcastSignalAction">
      <ref name="attlist.BroadcastSignalAction"/>
      <zeroOrMore>
        <ref name="UML.BroadcastSignalActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BroadcastSignalAction" combine="interleave">
    <ref name="UML.BroadcastSignalActionAtts"/>
  </define>
  <!-- ========= UML:CallProcedureAction ========= -->
  <define name="CallProcedureAction.calledProcedure">
    <element name="UML:CallProcedureAction.calledProcedure">
      <ref name="attlist.CallProcedureAction.calledProcedure"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallProcedureAction.calledProcedure" combine="interleave">
    <empty/>
  </define>
  <define name="CallProcedureAction.isSynchronous">
    <element name="UML:CallProcedureAction.isSynchronous">
      <ref name="attlist.CallProcedureAction.isSynchronous"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.CallProcedureAction.isSynchronous" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.CallProcedureActionFeatures">
    <choice>
      <ref name="UML.PrimitiveActionFeatures"/>
      <ref name="CallProcedureAction.calledProcedure"/>
      <ref name="CallProcedureAction.isSynchronous"/>
    </choice>
  </define>
  <define name="UML.CallProcedureActionAtts">
    <ref name="UML.PrimitiveActionAtts"/>
    <optional>
      <attribute name="calledProcedure">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isSynchronous">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="CallProcedureAction">
    <element name="UML:CallProcedureAction">
      <ref name="attlist.CallProcedureAction"/>
      <zeroOrMore>
        <ref name="UML.CallProcedureActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallProcedureAction" combine="interleave">
    <ref name="UML.CallProcedureActionAtts"/>
  </define>
  <!-- ========= UML:State_Machines ========= -->
  <!-- ========= UML:StateMachine ========= -->
  <define name="StateMachine.context">
    <element name="UML:StateMachine.context">
      <ref name="attlist.StateMachine.context"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.context" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.top">
    <element name="UML:StateMachine.top">
      <ref name="attlist.StateMachine.top"/>
      <zeroOrMore>
        <choice>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.top" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.transitions">
    <element name="UML:StateMachine.transitions">
      <ref name="attlist.StateMachine.transitions"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.transitions" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.submachineState">
    <element name="UML:StateMachine.submachineState">
      <ref name="attlist.StateMachine.submachineState"/>
      <zeroOrMore>
        <ref name="SubmachineState"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.submachineState" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StateMachineFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="StateMachine.context"/>
      <ref name="StateMachine.top"/>
      <ref name="StateMachine.transitions"/>
      <ref name="StateMachine.submachineState"/>
    </choice>
  </define>
  <define name="UML.StateMachineAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="submachineState">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StateMachine">
    <element name="UML:StateMachine">
      <ref name="attlist.StateMachine"/>
      <zeroOrMore>
        <ref name="UML.StateMachineFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine" combine="interleave">
    <ref name="UML.StateMachineAtts"/>
  </define>
  <!-- ========= UML:Event ========= -->
  <define name="Event.parameter">
    <element name="UML:Event.parameter">
      <ref name="attlist.Event.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Event.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="UML.EventFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Event.parameter"/>
    </choice>
  </define>
  <define name="UML.EventAtts">
    <ref name="UML.ModelElementAtts"/>
  </define>
  <define name="Event">
    <element name="UML:Event">
      <ref name="attlist.Event"/>
      <zeroOrMore>
        <ref name="UML.EventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Event" combine="interleave">
    <ref name="UML.EventAtts"/>
  </define>
  <!-- ========= UML:StateVertex ========= -->
  <define name="StateVertex.container">
    <element name="UML:StateVertex.container">
      <ref name="attlist.StateVertex.container"/>
      <zeroOrMore>
        <ref name="CompositeState"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.container" combine="interleave">
    <empty/>
  </define>
  <define name="StateVertex.outgoing">
    <element name="UML:StateVertex.outgoing">
      <ref name="attlist.StateVertex.outgoing"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.outgoing" combine="interleave">
    <empty/>
  </define>
  <define name="StateVertex.incoming">
    <element name="UML:StateVertex.incoming">
      <ref name="attlist.StateVertex.incoming"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.incoming" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StateVertexFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="StateVertex.container"/>
      <ref name="StateVertex.outgoing"/>
      <ref name="StateVertex.incoming"/>
    </choice>
  </define>
  <define name="UML.StateVertexAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="container">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="outgoing">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="incoming">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StateVertex">
    <element name="UML:StateVertex">
      <ref name="attlist.StateVertex"/>
      <zeroOrMore>
        <ref name="UML.StateVertexFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex" combine="interleave">
    <ref name="UML.StateVertexAtts"/>
  </define>
  <!-- ========= UML:State ========= -->
  <define name="State.entry">
    <element name="UML:State.entry">
      <ref name="attlist.State.entry"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.entry" combine="interleave">
    <empty/>
  </define>
  <define name="State.exit">
    <element name="UML:State.exit">
      <ref name="attlist.State.exit"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.exit" combine="interleave">
    <empty/>
  </define>
  <define name="State.deferrableEvent">
    <element name="UML:State.deferrableEvent">
      <ref name="attlist.State.deferrableEvent"/>
      <zeroOrMore>
        <ref name="Event"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.deferrableEvent" combine="interleave">
    <empty/>
  </define>
  <define name="State.internalTransition">
    <element name="UML:State.internalTransition">
      <ref name="attlist.State.internalTransition"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.internalTransition" combine="interleave">
    <empty/>
  </define>
  <define name="State.doActivity">
    <element name="UML:State.doActivity">
      <ref name="attlist.State.doActivity"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.doActivity" combine="interleave">
    <empty/>
  </define>
  <define name="State.stateMachine">
    <element name="UML:State.stateMachine">
      <ref name="attlist.State.stateMachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.stateMachine" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StateFeatures">
    <choice>
      <ref name="UML.StateVertexFeatures"/>
      <ref name="State.entry"/>
      <ref name="State.exit"/>
      <ref name="State.deferrableEvent"/>
      <ref name="State.internalTransition"/>
      <ref name="State.doActivity"/>
      <ref name="State.stateMachine"/>
    </choice>
  </define>
  <define name="UML.StateAtts">
    <ref name="UML.StateVertexAtts"/>
    <optional>
      <attribute name="deferrableEvent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stateMachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="State">
    <element name="UML:State">
      <ref name="attlist.State"/>
      <zeroOrMore>
        <ref name="UML.StateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State" combine="interleave">
    <ref name="UML.StateAtts"/>
  </define>
  <!-- ========= UML:TimeEvent ========= -->
  <define name="TimeEvent.when">
    <element name="UML:TimeEvent.when">
      <ref name="attlist.TimeEvent.when"/>
      <zeroOrMore>
        <ref name="TimeExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeEvent.when" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TimeEventFeatures">
    <choice>
      <ref name="UML.EventFeatures"/>
      <ref name="TimeEvent.when"/>
    </choice>
  </define>
  <define name="UML.TimeEventAtts">
    <ref name="UML.EventAtts"/>
  </define>
  <define name="TimeEvent">
    <element name="UML:TimeEvent">
      <ref name="attlist.TimeEvent"/>
      <zeroOrMore>
        <ref name="UML.TimeEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeEvent" combine="interleave">
    <ref name="UML.TimeEventAtts"/>
  </define>
  <!-- ========= UML:CallEvent ========= -->
  <define name="CallEvent.operation">
    <element name="UML:CallEvent.operation">
      <ref name="attlist.CallEvent.operation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallEvent.operation" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CallEventFeatures">
    <choice>
      <ref name="UML.EventFeatures"/>
      <ref name="CallEvent.operation"/>
    </choice>
  </define>
  <define name="UML.CallEventAtts">
    <ref name="UML.EventAtts"/>
    <optional>
      <attribute name="operation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CallEvent">
    <element name="UML:CallEvent">
      <ref name="attlist.CallEvent"/>
      <zeroOrMore>
        <ref name="UML.CallEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallEvent" combine="interleave">
    <ref name="UML.CallEventAtts"/>
  </define>
  <!-- ========= UML:SignalEvent ========= -->
  <define name="SignalEvent.signal">
    <element name="UML:SignalEvent.signal">
      <ref name="attlist.SignalEvent.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SignalEvent.signal" combine="interleave">
    <empty/>
  </define>
  <define name="UML.SignalEventFeatures">
    <choice>
      <ref name="UML.EventFeatures"/>
      <ref name="SignalEvent.signal"/>
    </choice>
  </define>
  <define name="UML.SignalEventAtts">
    <ref name="UML.EventAtts"/>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SignalEvent">
    <element name="UML:SignalEvent">
      <ref name="attlist.SignalEvent"/>
      <zeroOrMore>
        <ref name="UML.SignalEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SignalEvent" combine="interleave">
    <ref name="UML.SignalEventAtts"/>
  </define>
  <!-- ========= UML:Transition ========= -->
  <define name="Transition.guard">
    <element name="UML:Transition.guard">
      <ref name="attlist.Transition.guard"/>
      <zeroOrMore>
        <ref name="Guard"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.guard" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.effect">
    <element name="UML:Transition.effect">
      <ref name="attlist.Transition.effect"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.effect" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.trigger">
    <element name="UML:Transition.trigger">
      <ref name="attlist.Transition.trigger"/>
      <zeroOrMore>
        <ref name="Event"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.trigger" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.source">
    <element name="UML:Transition.source">
      <ref name="attlist.Transition.source"/>
      <zeroOrMore>
        <ref name="StateVertex"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.source" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.target">
    <element name="UML:Transition.target">
      <ref name="attlist.Transition.target"/>
      <zeroOrMore>
        <ref name="StateVertex"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.target" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.stateMachine">
    <element name="UML:Transition.stateMachine">
      <ref name="attlist.Transition.stateMachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.stateMachine" combine="interleave">
    <empty/>
  </define>
  <define name="UML.TransitionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Transition.guard"/>
      <ref name="Transition.effect"/>
      <ref name="Transition.trigger"/>
      <ref name="Transition.source"/>
      <ref name="Transition.target"/>
      <ref name="Transition.stateMachine"/>
    </choice>
  </define>
  <define name="UML.TransitionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="trigger">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="source">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="target">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stateMachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Transition">
    <element name="UML:Transition">
      <ref name="attlist.Transition"/>
      <zeroOrMore>
        <ref name="UML.TransitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition" combine="interleave">
    <ref name="UML.TransitionAtts"/>
  </define>
  <!-- ========= UML:CompositeState ========= -->
  <define name="CompositeState.isConcurrent">
    <element name="UML:CompositeState.isConcurrent">
      <ref name="attlist.CompositeState.isConcurrent"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.CompositeState.isConcurrent" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="CompositeState.subvertex">
    <element name="UML:CompositeState.subvertex">
      <ref name="attlist.CompositeState.subvertex"/>
      <zeroOrMore>
        <choice>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CompositeState.subvertex" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CompositeStateFeatures">
    <choice>
      <ref name="UML.StateFeatures"/>
      <ref name="CompositeState.isConcurrent"/>
      <ref name="CompositeState.subvertex"/>
    </choice>
  </define>
  <define name="UML.CompositeStateAtts">
    <ref name="UML.StateAtts"/>
    <optional>
      <attribute name="isConcurrent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="CompositeState">
    <element name="UML:CompositeState">
      <ref name="attlist.CompositeState"/>
      <zeroOrMore>
        <ref name="UML.CompositeStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CompositeState" combine="interleave">
    <ref name="UML.CompositeStateAtts"/>
  </define>
  <!-- ========= UML:ChangeEvent ========= -->
  <define name="ChangeEvent.changeExpression">
    <element name="UML:ChangeEvent.changeExpression">
      <ref name="attlist.ChangeEvent.changeExpression"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ChangeEvent.changeExpression" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ChangeEventFeatures">
    <choice>
      <ref name="UML.EventFeatures"/>
      <ref name="ChangeEvent.changeExpression"/>
    </choice>
  </define>
  <define name="UML.ChangeEventAtts">
    <ref name="UML.EventAtts"/>
  </define>
  <define name="ChangeEvent">
    <element name="UML:ChangeEvent">
      <ref name="attlist.ChangeEvent"/>
      <zeroOrMore>
        <ref name="UML.ChangeEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ChangeEvent" combine="interleave">
    <ref name="UML.ChangeEventAtts"/>
  </define>
  <!-- ========= UML:Guard ========= -->
  <define name="Guard.expression">
    <element name="UML:Guard.expression">
      <ref name="attlist.Guard.expression"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard.expression" combine="interleave">
    <empty/>
  </define>
  <define name="Guard.transition">
    <element name="UML:Guard.transition">
      <ref name="attlist.Guard.transition"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard.transition" combine="interleave">
    <empty/>
  </define>
  <define name="UML.GuardFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Guard.expression"/>
      <ref name="Guard.transition"/>
    </choice>
  </define>
  <define name="UML.GuardAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="transition">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Guard">
    <element name="UML:Guard">
      <ref name="attlist.Guard"/>
      <zeroOrMore>
        <ref name="UML.GuardFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard" combine="interleave">
    <ref name="UML.GuardAtts"/>
  </define>
  <!-- ========= UML:Pseudostate ========= -->
  <define name="Pseudostate.kind">
    <element name="UML:Pseudostate.kind">
      <ref name="attlist.Pseudostate.kind"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Pseudostate.kind" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.PseudostateKind"/>
    </attribute>
  </define>
  <define name="UML.PseudostateFeatures">
    <choice>
      <ref name="UML.StateVertexFeatures"/>
      <ref name="Pseudostate.kind"/>
    </choice>
  </define>
  <define name="UML.PseudostateAtts">
    <ref name="UML.StateVertexAtts"/>
    <optional>
      <attribute name="kind">
        <ref name="UML.PseudostateKind"/>
      </attribute>
    </optional>
  </define>
  <define name="Pseudostate">
    <element name="UML:Pseudostate">
      <ref name="attlist.Pseudostate"/>
      <zeroOrMore>
        <ref name="UML.PseudostateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Pseudostate" combine="interleave">
    <ref name="UML.PseudostateAtts"/>
  </define>
  <!-- ========= UML:SimpleState ========= -->
  <define name="UML.SimpleStateFeatures">
    <ref name="UML.StateFeatures"/>
  </define>
  <define name="UML.SimpleStateAtts">
    <ref name="UML.StateAtts"/>
  </define>
  <define name="SimpleState">
    <element name="UML:SimpleState">
      <ref name="attlist.SimpleState"/>
      <zeroOrMore>
        <ref name="UML.SimpleStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SimpleState" combine="interleave">
    <ref name="UML.SimpleStateAtts"/>
  </define>
  <!-- ========= UML:SubmachineState ========= -->
  <define name="SubmachineState.submachine">
    <element name="UML:SubmachineState.submachine">
      <ref name="attlist.SubmachineState.submachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubmachineState.submachine" combine="interleave">
    <empty/>
  </define>
  <define name="UML.SubmachineStateFeatures">
    <choice>
      <ref name="UML.CompositeStateFeatures"/>
      <ref name="SubmachineState.submachine"/>
    </choice>
  </define>
  <define name="UML.SubmachineStateAtts">
    <ref name="UML.CompositeStateAtts"/>
    <optional>
      <attribute name="submachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SubmachineState">
    <element name="UML:SubmachineState">
      <ref name="attlist.SubmachineState"/>
      <zeroOrMore>
        <ref name="UML.SubmachineStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubmachineState" combine="interleave">
    <ref name="UML.SubmachineStateAtts"/>
  </define>
  <!-- ========= UML:SynchState ========= -->
  <define name="SynchState.bound">
    <element name="UML:SynchState.bound">
      <ref name="attlist.SynchState.bound"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SynchState.bound" combine="interleave">
    <empty/>
  </define>
  <define name="UML.SynchStateFeatures">
    <choice>
      <ref name="UML.StateVertexFeatures"/>
      <ref name="SynchState.bound"/>
    </choice>
  </define>
  <define name="UML.SynchStateAtts">
    <ref name="UML.StateVertexAtts"/>
    <optional>
      <attribute name="bound"/>
    </optional>
  </define>
  <define name="SynchState">
    <element name="UML:SynchState">
      <ref name="attlist.SynchState"/>
      <zeroOrMore>
        <ref name="UML.SynchStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SynchState" combine="interleave">
    <ref name="UML.SynchStateAtts"/>
  </define>
  <!-- ========= UML:StubState ========= -->
  <define name="StubState.referenceState">
    <element name="UML:StubState.referenceState">
      <ref name="attlist.StubState.referenceState"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StubState.referenceState" combine="interleave">
    <empty/>
  </define>
  <define name="UML.StubStateFeatures">
    <choice>
      <ref name="UML.StateVertexFeatures"/>
      <ref name="StubState.referenceState"/>
    </choice>
  </define>
  <define name="UML.StubStateAtts">
    <ref name="UML.StateVertexAtts"/>
    <optional>
      <attribute name="referenceState"/>
    </optional>
  </define>
  <define name="StubState">
    <element name="UML:StubState">
      <ref name="attlist.StubState"/>
      <zeroOrMore>
        <ref name="UML.StubStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StubState" combine="interleave">
    <ref name="UML.StubStateAtts"/>
  </define>
  <!-- ========= UML:FinalState ========= -->
  <define name="UML.FinalStateFeatures">
    <ref name="UML.StateFeatures"/>
  </define>
  <define name="UML.FinalStateAtts">
    <ref name="UML.StateAtts"/>
  </define>
  <define name="FinalState">
    <element name="UML:FinalState">
      <ref name="attlist.FinalState"/>
      <zeroOrMore>
        <ref name="UML.FinalStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.FinalState" combine="interleave">
    <ref name="UML.FinalStateAtts"/>
  </define>
  <!-- ========= UML:Activity_Graphs ========= -->
  <!-- ========= UML:ActivityGraph ========= -->
  <define name="ActivityGraph.partition">
    <element name="UML:ActivityGraph.partition">
      <ref name="attlist.ActivityGraph.partition"/>
      <zeroOrMore>
        <ref name="Partition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActivityGraph.partition" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ActivityGraphFeatures">
    <choice>
      <ref name="UML.StateMachineFeatures"/>
      <ref name="ActivityGraph.partition"/>
    </choice>
  </define>
  <define name="UML.ActivityGraphAtts">
    <ref name="UML.StateMachineAtts"/>
  </define>
  <define name="ActivityGraph">
    <element name="UML:ActivityGraph">
      <ref name="attlist.ActivityGraph"/>
      <zeroOrMore>
        <ref name="UML.ActivityGraphFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActivityGraph" combine="interleave">
    <ref name="UML.ActivityGraphAtts"/>
  </define>
  <!-- ========= UML:Partition ========= -->
  <define name="Partition.contents">
    <element name="UML:Partition.contents">
      <ref name="attlist.Partition.contents"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition.contents" combine="interleave">
    <empty/>
  </define>
  <define name="Partition.activityGraph">
    <element name="UML:Partition.activityGraph">
      <ref name="attlist.Partition.activityGraph"/>
      <zeroOrMore>
        <ref name="ActivityGraph"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition.activityGraph" combine="interleave">
    <empty/>
  </define>
  <define name="UML.PartitionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Partition.contents"/>
      <ref name="Partition.activityGraph"/>
    </choice>
  </define>
  <define name="UML.PartitionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="contents">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="activityGraph">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Partition">
    <element name="UML:Partition">
      <ref name="attlist.Partition"/>
      <zeroOrMore>
        <ref name="UML.PartitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition" combine="interleave">
    <ref name="UML.PartitionAtts"/>
  </define>
  <!-- ========= UML:SubactivityState ========= -->
  <define name="SubactivityState.isDynamic">
    <element name="UML:SubactivityState.isDynamic">
      <ref name="attlist.SubactivityState.isDynamic"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.SubactivityState.isDynamic" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="SubactivityState.dynamicArguments">
    <element name="UML:SubactivityState.dynamicArguments">
      <ref name="attlist.SubactivityState.dynamicArguments"/>
      <zeroOrMore>
        <ref name="ArgListsExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState.dynamicArguments" combine="interleave">
    <empty/>
  </define>
  <define name="SubactivityState.dynamicMultiplicity">
    <element name="UML:SubactivityState.dynamicMultiplicity">
      <ref name="attlist.SubactivityState.dynamicMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState.dynamicMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="UML.SubactivityStateFeatures">
    <choice>
      <ref name="UML.SubmachineStateFeatures"/>
      <ref name="SubactivityState.isDynamic"/>
      <ref name="SubactivityState.dynamicArguments"/>
      <ref name="SubactivityState.dynamicMultiplicity"/>
    </choice>
  </define>
  <define name="UML.SubactivityStateAtts">
    <ref name="UML.SubmachineStateAtts"/>
    <optional>
      <attribute name="isDynamic">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="SubactivityState">
    <element name="UML:SubactivityState">
      <ref name="attlist.SubactivityState"/>
      <zeroOrMore>
        <ref name="UML.SubactivityStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState" combine="interleave">
    <ref name="UML.SubactivityStateAtts"/>
  </define>
  <!-- ========= UML:ActionState ========= -->
  <define name="ActionState.isDynamic">
    <element name="UML:ActionState.isDynamic">
      <ref name="attlist.ActionState.isDynamic"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ActionState.isDynamic" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ActionState.dynamicArguments">
    <element name="UML:ActionState.dynamicArguments">
      <ref name="attlist.ActionState.dynamicArguments"/>
      <zeroOrMore>
        <ref name="ArgListsExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState.dynamicArguments" combine="interleave">
    <empty/>
  </define>
  <define name="ActionState.dynamicMultiplicity">
    <element name="UML:ActionState.dynamicMultiplicity">
      <ref name="attlist.ActionState.dynamicMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState.dynamicMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ActionStateFeatures">
    <choice>
      <ref name="UML.SimpleStateFeatures"/>
      <ref name="ActionState.isDynamic"/>
      <ref name="ActionState.dynamicArguments"/>
      <ref name="ActionState.dynamicMultiplicity"/>
    </choice>
  </define>
  <define name="UML.ActionStateAtts">
    <ref name="UML.SimpleStateAtts"/>
    <optional>
      <attribute name="isDynamic">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ActionState">
    <element name="UML:ActionState">
      <ref name="attlist.ActionState"/>
      <zeroOrMore>
        <ref name="UML.ActionStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState" combine="interleave">
    <ref name="UML.ActionStateAtts"/>
  </define>
  <!-- ========= UML:CallState ========= -->
  <define name="UML.CallStateFeatures">
    <ref name="UML.ActionStateFeatures"/>
  </define>
  <define name="UML.CallStateAtts">
    <ref name="UML.ActionStateAtts"/>
  </define>
  <define name="CallState">
    <element name="UML:CallState">
      <ref name="attlist.CallState"/>
      <zeroOrMore>
        <ref name="UML.CallStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallState" combine="interleave">
    <ref name="UML.CallStateAtts"/>
  </define>
  <!-- ========= UML:ObjectFlowState ========= -->
  <define name="ObjectFlowState.isSynch">
    <element name="UML:ObjectFlowState.isSynch">
      <ref name="attlist.ObjectFlowState.isSynch"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.isSynch" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ObjectFlowState.parameter">
    <element name="UML:ObjectFlowState.parameter">
      <ref name="attlist.ObjectFlowState.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="ObjectFlowState.type">
    <element name="UML:ObjectFlowState.type">
      <ref name="attlist.ObjectFlowState.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.type" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ObjectFlowStateFeatures">
    <choice>
      <ref name="UML.SimpleStateFeatures"/>
      <ref name="ObjectFlowState.isSynch"/>
      <ref name="ObjectFlowState.parameter"/>
      <ref name="ObjectFlowState.type"/>
    </choice>
  </define>
  <define name="UML.ObjectFlowStateAtts">
    <ref name="UML.SimpleStateAtts"/>
    <optional>
      <attribute name="isSynch">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="parameter">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ObjectFlowState">
    <element name="UML:ObjectFlowState">
      <ref name="attlist.ObjectFlowState"/>
      <zeroOrMore>
        <ref name="UML.ObjectFlowStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState" combine="interleave">
    <ref name="UML.ObjectFlowStateAtts"/>
  </define>
  <!-- ========= UML:ClassifierInState ========= -->
  <define name="ClassifierInState.type">
    <element name="UML:ClassifierInState.type">
      <ref name="attlist.ClassifierInState.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState.type" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierInState.inState">
    <element name="UML:ClassifierInState.inState">
      <ref name="attlist.ClassifierInState.inState"/>
      <zeroOrMore>
        <ref name="State"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState.inState" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ClassifierInStateFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="ClassifierInState.type"/>
      <ref name="ClassifierInState.inState"/>
    </choice>
  </define>
  <define name="UML.ClassifierInStateAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="inState">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ClassifierInState">
    <element name="UML:ClassifierInState">
      <ref name="attlist.ClassifierInState"/>
      <zeroOrMore>
        <ref name="UML.ClassifierInStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState" combine="interleave">
    <ref name="UML.ClassifierInStateAtts"/>
  </define>
  <!-- ========= UML:Collaborations ========= -->
  <!-- ========= UML:Collaboration ========= -->
  <define name="Collaboration.interaction">
    <element name="UML:Collaboration.interaction">
      <ref name="attlist.Collaboration.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.representedClassifier">
    <element name="UML:Collaboration.representedClassifier">
      <ref name="attlist.Collaboration.representedClassifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.representedClassifier" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.representedOperation">
    <element name="UML:Collaboration.representedOperation">
      <ref name="attlist.Collaboration.representedOperation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.representedOperation" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.constrainingElement">
    <element name="UML:Collaboration.constrainingElement">
      <ref name="attlist.Collaboration.constrainingElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.constrainingElement" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.usedCollaboration">
    <element name="UML:Collaboration.usedCollaboration">
      <ref name="attlist.Collaboration.usedCollaboration"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.usedCollaboration" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CollaborationFeatures">
    <choice>
      <ref name="UML.GeneralizableElementFeatures"/>
      <ref name="Namespace.ownedElement"/>
      <ref name="Collaboration.interaction"/>
      <ref name="Collaboration.representedClassifier"/>
      <ref name="Collaboration.representedOperation"/>
      <ref name="Collaboration.constrainingElement"/>
      <ref name="Collaboration.usedCollaboration"/>
    </choice>
  </define>
  <define name="UML.CollaborationAtts">
    <ref name="UML.GeneralizableElementAtts"/>
    <optional>
      <attribute name="representedClassifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="representedOperation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constrainingElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="usedCollaboration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Collaboration">
    <element name="UML:Collaboration">
      <ref name="attlist.Collaboration"/>
      <zeroOrMore>
        <ref name="UML.CollaborationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration" combine="interleave">
    <ref name="UML.CollaborationAtts"/>
  </define>
  <!-- ========= UML:ClassifierRole ========= -->
  <define name="ClassifierRole.multiplicity">
    <element name="UML:ClassifierRole.multiplicity">
      <ref name="attlist.ClassifierRole.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.base">
    <element name="UML:ClassifierRole.base">
      <ref name="attlist.ClassifierRole.base"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.availableFeature">
    <element name="UML:ClassifierRole.availableFeature">
      <ref name="attlist.ClassifierRole.availableFeature"/>
      <zeroOrMore>
        <ref name="Feature"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.availableFeature" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.availableContents">
    <element name="UML:ClassifierRole.availableContents">
      <ref name="attlist.ClassifierRole.availableContents"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.availableContents" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.conformingInstance">
    <element name="UML:ClassifierRole.conformingInstance">
      <ref name="attlist.ClassifierRole.conformingInstance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.conformingInstance" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ClassifierRoleFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="ClassifierRole.multiplicity"/>
      <ref name="ClassifierRole.base"/>
      <ref name="ClassifierRole.availableFeature"/>
      <ref name="ClassifierRole.availableContents"/>
      <ref name="ClassifierRole.conformingInstance"/>
    </choice>
  </define>
  <define name="UML.ClassifierRoleAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableFeature">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableContents">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ClassifierRole">
    <element name="UML:ClassifierRole">
      <ref name="attlist.ClassifierRole"/>
      <zeroOrMore>
        <ref name="UML.ClassifierRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole" combine="interleave">
    <ref name="UML.ClassifierRoleAtts"/>
  </define>
  <!-- ========= UML:AssociationRole ========= -->
  <define name="AssociationRole.multiplicity">
    <element name="UML:AssociationRole.multiplicity">
      <ref name="attlist.AssociationRole.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.base">
    <element name="UML:AssociationRole.base">
      <ref name="attlist.AssociationRole.base"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.message">
    <element name="UML:AssociationRole.message">
      <ref name="attlist.AssociationRole.message"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.message" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.conformingLink">
    <element name="UML:AssociationRole.conformingLink">
      <ref name="attlist.AssociationRole.conformingLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.conformingLink" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AssociationRoleFeatures">
    <choice>
      <ref name="UML.AssociationFeatures"/>
      <ref name="AssociationRole.multiplicity"/>
      <ref name="AssociationRole.base"/>
      <ref name="AssociationRole.message"/>
      <ref name="AssociationRole.conformingLink"/>
    </choice>
  </define>
  <define name="UML.AssociationRoleAtts">
    <ref name="UML.AssociationAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="message">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationRole">
    <element name="UML:AssociationRole">
      <ref name="attlist.AssociationRole"/>
      <zeroOrMore>
        <ref name="UML.AssociationRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole" combine="interleave">
    <ref name="UML.AssociationRoleAtts"/>
  </define>
  <!-- ========= UML:AssociationEndRole ========= -->
  <define name="AssociationEndRole.collaborationMultiplicity">
    <element name="UML:AssociationEndRole.collaborationMultiplicity">
      <ref name="attlist.AssociationEndRole.collaborationMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.collaborationMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndRole.base">
    <element name="UML:AssociationEndRole.base">
      <ref name="attlist.AssociationEndRole.base"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndRole.availableQualifier">
    <element name="UML:AssociationEndRole.availableQualifier">
      <ref name="attlist.AssociationEndRole.availableQualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.availableQualifier" combine="interleave">
    <empty/>
  </define>
  <define name="UML.AssociationEndRoleFeatures">
    <choice>
      <ref name="UML.AssociationEndFeatures"/>
      <ref name="AssociationEndRole.collaborationMultiplicity"/>
      <ref name="AssociationEndRole.base"/>
      <ref name="AssociationEndRole.availableQualifier"/>
    </choice>
  </define>
  <define name="UML.AssociationEndRoleAtts">
    <ref name="UML.AssociationEndAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableQualifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationEndRole">
    <element name="UML:AssociationEndRole">
      <ref name="attlist.AssociationEndRole"/>
      <zeroOrMore>
        <ref name="UML.AssociationEndRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole" combine="interleave">
    <ref name="UML.AssociationEndRoleAtts"/>
  </define>
  <!-- ========= UML:Message ========= -->
  <define name="Message.interaction">
    <element name="UML:Message.interaction">
      <ref name="attlist.Message.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="Message.activator">
    <element name="UML:Message.activator">
      <ref name="attlist.Message.activator"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.activator" combine="interleave">
    <empty/>
  </define>
  <define name="Message.sender">
    <element name="UML:Message.sender">
      <ref name="attlist.Message.sender"/>
      <zeroOrMore>
        <ref name="ClassifierRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.sender" combine="interleave">
    <empty/>
  </define>
  <define name="Message.receiver">
    <element name="UML:Message.receiver">
      <ref name="attlist.Message.receiver"/>
      <zeroOrMore>
        <ref name="ClassifierRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.receiver" combine="interleave">
    <empty/>
  </define>
  <define name="Message.predecessor">
    <element name="UML:Message.predecessor">
      <ref name="attlist.Message.predecessor"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.predecessor" combine="interleave">
    <empty/>
  </define>
  <define name="Message.communicationConnection">
    <element name="UML:Message.communicationConnection">
      <ref name="attlist.Message.communicationConnection"/>
      <zeroOrMore>
        <ref name="AssociationRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.communicationConnection" combine="interleave">
    <empty/>
  </define>
  <define name="Message.procedure">
    <element name="UML:Message.procedure">
      <ref name="attlist.Message.procedure"/>
      <zeroOrMore>
        <ref name="Procedure"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.procedure" combine="interleave">
    <empty/>
  </define>
  <define name="Message.conformingStimulus">
    <element name="UML:Message.conformingStimulus">
      <ref name="attlist.Message.conformingStimulus"/>
      <zeroOrMore>
        <ref name="Stimulus"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.conformingStimulus" combine="interleave">
    <empty/>
  </define>
  <define name="UML.MessageFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Message.interaction"/>
      <ref name="Message.activator"/>
      <ref name="Message.sender"/>
      <ref name="Message.receiver"/>
      <ref name="Message.predecessor"/>
      <ref name="Message.communicationConnection"/>
      <ref name="Message.procedure"/>
      <ref name="Message.conformingStimulus"/>
    </choice>
  </define>
  <define name="UML.MessageAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="interaction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="activator">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sender">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="receiver">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="predecessor">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="communicationConnection">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="procedure">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingStimulus">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Message">
    <element name="UML:Message">
      <ref name="attlist.Message"/>
      <zeroOrMore>
        <ref name="UML.MessageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message" combine="interleave">
    <ref name="UML.MessageAtts"/>
  </define>
  <!-- ========= UML:Interaction ========= -->
  <define name="Interaction.message">
    <element name="UML:Interaction.message">
      <ref name="attlist.Interaction.message"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction.message" combine="interleave">
    <empty/>
  </define>
  <define name="Interaction.context">
    <element name="UML:Interaction.context">
      <ref name="attlist.Interaction.context"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction.context" combine="interleave">
    <empty/>
  </define>
  <define name="UML.InteractionFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="Interaction.message"/>
      <ref name="Interaction.context"/>
    </choice>
  </define>
  <define name="UML.InteractionAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Interaction">
    <element name="UML:Interaction">
      <ref name="attlist.Interaction"/>
      <zeroOrMore>
        <ref name="UML.InteractionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction" combine="interleave">
    <ref name="UML.InteractionAtts"/>
  </define>
  <!-- ========= UML:InteractionInstanceSet ========= -->
  <define name="InteractionInstanceSet.context">
    <element name="UML:InteractionInstanceSet.context">
      <ref name="attlist.InteractionInstanceSet.context"/>
      <zeroOrMore>
        <ref name="CollaborationInstanceSet"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.context" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionInstanceSet.interaction">
    <element name="UML:InteractionInstanceSet.interaction">
      <ref name="attlist.InteractionInstanceSet.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionInstanceSet.participatingStimulus">
    <element name="UML:InteractionInstanceSet.participatingStimulus">
      <ref name="attlist.InteractionInstanceSet.participatingStimulus"/>
      <zeroOrMore>
        <ref name="Stimulus"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.participatingStimulus" combine="interleave">
    <empty/>
  </define>
  <define name="UML.InteractionInstanceSetFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="InteractionInstanceSet.context"/>
      <ref name="InteractionInstanceSet.interaction"/>
      <ref name="InteractionInstanceSet.participatingStimulus"/>
    </choice>
  </define>
  <define name="UML.InteractionInstanceSetAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="interaction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingStimulus">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="InteractionInstanceSet">
    <element name="UML:InteractionInstanceSet">
      <ref name="attlist.InteractionInstanceSet"/>
      <zeroOrMore>
        <ref name="UML.InteractionInstanceSetFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet" combine="interleave">
    <ref name="UML.InteractionInstanceSetAtts"/>
  </define>
  <!-- ========= UML:CollaborationInstanceSet ========= -->
  <define name="CollaborationInstanceSet.interactionInstanceSet">
    <element name="UML:CollaborationInstanceSet.interactionInstanceSet">
      <ref name="attlist.CollaborationInstanceSet.interactionInstanceSet"/>
      <zeroOrMore>
        <ref name="InteractionInstanceSet"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.interactionInstanceSet" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.collaboration">
    <element name="UML:CollaborationInstanceSet.collaboration">
      <ref name="attlist.CollaborationInstanceSet.collaboration"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.collaboration" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.participatingInstance">
    <element name="UML:CollaborationInstanceSet.participatingInstance">
      <ref name="attlist.CollaborationInstanceSet.participatingInstance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.participatingInstance" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.participatingLink">
    <element name="UML:CollaborationInstanceSet.participatingLink">
      <ref name="attlist.CollaborationInstanceSet.participatingLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.participatingLink" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.constrainingElement">
    <element name="UML:CollaborationInstanceSet.constrainingElement">
      <ref name="attlist.CollaborationInstanceSet.constrainingElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.constrainingElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.CollaborationInstanceSetFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="CollaborationInstanceSet.interactionInstanceSet"/>
      <ref name="CollaborationInstanceSet.collaboration"/>
      <ref name="CollaborationInstanceSet.participatingInstance"/>
      <ref name="CollaborationInstanceSet.participatingLink"/>
      <ref name="CollaborationInstanceSet.constrainingElement"/>
    </choice>
  </define>
  <define name="UML.CollaborationInstanceSetAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="collaboration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constrainingElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CollaborationInstanceSet">
    <element name="UML:CollaborationInstanceSet">
      <ref name="attlist.CollaborationInstanceSet"/>
      <zeroOrMore>
        <ref name="UML.CollaborationInstanceSetFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet" combine="interleave">
    <ref name="UML.CollaborationInstanceSetAtts"/>
  </define>
  <!-- ========= UML:Model_Management ========= -->
  <!-- ========= UML:Package ========= -->
  <define name="Package.elementImport">
    <element name="UML:Package.elementImport">
      <ref name="attlist.Package.elementImport"/>
      <zeroOrMore>
        <ref name="ElementImport"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Package.elementImport" combine="interleave">
    <empty/>
  </define>
  <define name="UML.PackageFeatures">
    <choice>
      <ref name="UML.GeneralizableElementFeatures"/>
      <ref name="Namespace.ownedElement"/>
      <ref name="Package.elementImport"/>
    </choice>
  </define>
  <define name="UML.PackageAtts">
    <ref name="UML.GeneralizableElementAtts"/>
  </define>
  <define name="Package">
    <element name="UML:Package">
      <ref name="attlist.Package"/>
      <zeroOrMore>
        <ref name="UML.PackageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Package" combine="interleave">
    <ref name="UML.PackageAtts"/>
  </define>
  <!-- ========= UML:Model ========= -->
  <define name="UML.ModelFeatures">
    <ref name="UML.PackageFeatures"/>
  </define>
  <define name="UML.ModelAtts">
    <ref name="UML.PackageAtts"/>
  </define>
  <define name="Model">
    <element name="UML:Model">
      <ref name="attlist.Model"/>
      <zeroOrMore>
        <ref name="UML.ModelFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Model" combine="interleave">
    <ref name="UML.ModelAtts"/>
  </define>
  <!-- ========= UML:Subsystem ========= -->
  <define name="Subsystem.isInstantiable">
    <element name="UML:Subsystem.isInstantiable">
      <ref name="attlist.Subsystem.isInstantiable"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Subsystem.isInstantiable" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="UML.SubsystemFeatures">
    <choice>
      <ref name="UML.PackageFeatures"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
      <ref name="Subsystem.isInstantiable"/>
    </choice>
  </define>
  <define name="UML.SubsystemAtts">
    <ref name="UML.PackageAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isInstantiable">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="Subsystem">
    <element name="UML:Subsystem">
      <ref name="attlist.Subsystem"/>
      <zeroOrMore>
        <ref name="UML.SubsystemFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Subsystem" combine="interleave">
    <ref name="UML.SubsystemAtts"/>
  </define>
  <!-- ========= UML:ElementImport ========= -->
  <define name="ElementImport.visibility">
    <element name="UML:ElementImport.visibility">
      <ref name="attlist.ElementImport.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ElementImport.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="UML.VisibilityKind"/>
    </attribute>
  </define>
  <define name="ElementImport.alias">
    <element name="UML:ElementImport.alias">
      <ref name="attlist.ElementImport.alias"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementImport.alias" combine="interleave">
    <empty/>
  </define>
  <define name="ElementImport.isSpecification">
    <element name="UML:ElementImport.isSpecification">
      <ref name="attlist.ElementImport.isSpecification"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ElementImport.isSpecification" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ElementImport.package">
    <element name="UML:ElementImport.package">
      <ref name="attlist.ElementImport.package"/>
      <zeroOrMore>
        <ref name="Package"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementImport.package" combine="interleave">
    <empty/>
  </define>
  <define name="ElementImport.importedElement">
    <element name="UML:ElementImport.importedElement">
      <ref name="attlist.ElementImport.importedElement"/>
      <zeroOrMore>
        <ref name="ModelElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementImport.importedElement" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ElementImportFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="ElementImport.visibility"/>
      <ref name="ElementImport.alias"/>
      <ref name="ElementImport.isSpecification"/>
      <ref name="ElementImport.package"/>
      <ref name="ElementImport.importedElement"/>
    </choice>
  </define>
  <define name="UML.ElementImportAtts">
    <ref name="XMI.element.att"/>
    <ref name="XMI.link.att"/>
    <optional>
      <attribute name="visibility">
        <ref name="UML.VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="alias"/>
    </optional>
    <optional>
      <attribute name="isSpecification">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="package">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="importedElement">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ElementImport">
    <element name="UML:ElementImport">
      <ref name="attlist.ElementImport"/>
      <zeroOrMore>
        <ref name="UML.ElementImportFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ElementImport" combine="interleave">
    <ref name="UML.ElementImportAtts"/>
  </define>
  <!-- ========= UML:Use_Cases ========= -->
  <!-- ========= UML:UseCase ========= -->
  <define name="UseCase.extend">
    <element name="UML:UseCase.extend">
      <ref name="attlist.UseCase.extend"/>
      <zeroOrMore>
        <ref name="Extend"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.extend" combine="interleave">
    <empty/>
  </define>
  <define name="UseCase.include">
    <element name="UML:UseCase.include">
      <ref name="attlist.UseCase.include"/>
      <zeroOrMore>
        <ref name="Include"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.include" combine="interleave">
    <empty/>
  </define>
  <define name="UseCase.extensionPoint">
    <element name="UML:UseCase.extensionPoint">
      <ref name="attlist.UseCase.extensionPoint"/>
      <zeroOrMore>
        <ref name="ExtensionPoint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.extensionPoint" combine="interleave">
    <empty/>
  </define>
  <define name="UML.UseCaseFeatures">
    <choice>
      <ref name="UML.ClassifierFeatures"/>
      <ref name="UseCase.extend"/>
      <ref name="UseCase.include"/>
      <ref name="UseCase.extensionPoint"/>
    </choice>
  </define>
  <define name="UML.UseCaseAtts">
    <ref name="UML.ClassifierAtts"/>
    <optional>
      <attribute name="extend">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="include">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="UseCase">
    <element name="UML:UseCase">
      <ref name="attlist.UseCase"/>
      <zeroOrMore>
        <ref name="UML.UseCaseFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase" combine="interleave">
    <ref name="UML.UseCaseAtts"/>
  </define>
  <!-- ========= UML:Actor ========= -->
  <define name="UML.ActorFeatures">
    <ref name="UML.ClassifierFeatures"/>
  </define>
  <define name="UML.ActorAtts">
    <ref name="UML.ClassifierAtts"/>
  </define>
  <define name="Actor">
    <element name="UML:Actor">
      <ref name="attlist.Actor"/>
      <zeroOrMore>
        <ref name="UML.ActorFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Actor" combine="interleave">
    <ref name="UML.ActorAtts"/>
  </define>
  <!-- ========= UML:UseCaseInstance ========= -->
  <define name="UML.UseCaseInstanceFeatures">
    <ref name="UML.InstanceFeatures"/>
  </define>
  <define name="UML.UseCaseInstanceAtts">
    <ref name="UML.InstanceAtts"/>
  </define>
  <define name="UseCaseInstance">
    <element name="UML:UseCaseInstance">
      <ref name="attlist.UseCaseInstance"/>
      <zeroOrMore>
        <ref name="UML.UseCaseInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCaseInstance" combine="interleave">
    <ref name="UML.UseCaseInstanceAtts"/>
  </define>
  <!-- ========= UML:Extend ========= -->
  <define name="Extend.condition">
    <element name="UML:Extend.condition">
      <ref name="attlist.Extend.condition"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.condition" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.base">
    <element name="UML:Extend.base">
      <ref name="attlist.Extend.base"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.base" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.extension">
    <element name="UML:Extend.extension">
      <ref name="attlist.Extend.extension"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.extension" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.extensionPoint">
    <element name="UML:Extend.extensionPoint">
      <ref name="attlist.Extend.extensionPoint"/>
      <zeroOrMore>
        <ref name="ExtensionPoint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.extensionPoint" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ExtendFeatures">
    <choice>
      <ref name="UML.RelationshipFeatures"/>
      <ref name="Extend.condition"/>
      <ref name="Extend.base"/>
      <ref name="Extend.extension"/>
      <ref name="Extend.extensionPoint"/>
    </choice>
  </define>
  <define name="UML.ExtendAtts">
    <ref name="UML.RelationshipAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="extension">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="extensionPoint">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Extend">
    <element name="UML:Extend">
      <ref name="attlist.Extend"/>
      <zeroOrMore>
        <ref name="UML.ExtendFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend" combine="interleave">
    <ref name="UML.ExtendAtts"/>
  </define>
  <!-- ========= UML:Include ========= -->
  <define name="Include.addition">
    <element name="UML:Include.addition">
      <ref name="attlist.Include.addition"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include.addition" combine="interleave">
    <empty/>
  </define>
  <define name="Include.base">
    <element name="UML:Include.base">
      <ref name="attlist.Include.base"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include.base" combine="interleave">
    <empty/>
  </define>
  <define name="UML.IncludeFeatures">
    <choice>
      <ref name="UML.RelationshipFeatures"/>
      <ref name="Include.addition"/>
      <ref name="Include.base"/>
    </choice>
  </define>
  <define name="UML.IncludeAtts">
    <ref name="UML.RelationshipAtts"/>
    <optional>
      <attribute name="addition">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Include">
    <element name="UML:Include">
      <ref name="attlist.Include"/>
      <zeroOrMore>
        <ref name="UML.IncludeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include" combine="interleave">
    <ref name="UML.IncludeAtts"/>
  </define>
  <!-- ========= UML:ExtensionPoint ========= -->
  <define name="ExtensionPoint.location">
    <element name="UML:ExtensionPoint.location">
      <ref name="attlist.ExtensionPoint.location"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint.location" combine="interleave">
    <empty/>
  </define>
  <define name="ExtensionPoint.useCase">
    <element name="UML:ExtensionPoint.useCase">
      <ref name="attlist.ExtensionPoint.useCase"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint.useCase" combine="interleave">
    <empty/>
  </define>
  <define name="UML.ExtensionPointFeatures">
    <choice>
      <ref name="UML.ModelElementFeatures"/>
      <ref name="ExtensionPoint.location"/>
      <ref name="ExtensionPoint.useCase"/>
    </choice>
  </define>
  <define name="UML.ExtensionPointAtts">
    <ref name="UML.ModelElementAtts"/>
    <optional>
      <attribute name="location"/>
    </optional>
    <optional>
      <attribute name="useCase">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ExtensionPoint">
    <element name="UML:ExtensionPoint">
      <ref name="attlist.ExtensionPoint"/>
      <zeroOrMore>
        <ref name="UML.ExtensionPointFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint" combine="interleave">
    <ref name="UML.ExtensionPointAtts"/>
  </define>
  <start>
    <choice>
      <ref name="JumpHandler"/>
      <ref name="XMI"/>
      <ref name="TerminateAction"/>
      <ref name="UninterpretedAction"/>
      <ref name="PresentationElement"/>
      <ref name="XMI.exporterID"/>
      <ref name="A_context_raisedSignal"/>
      <ref name="Element"/>
    </choice>
  </start>
  <define name="any">
    <zeroOrMore>
      <choice>
        <element>
          <anyName/>
          <zeroOrMore>
            <attribute>
              <anyName/>
            </attribute>
          </zeroOrMore>
          <ref name="any"/>
        </element>
        <text/>
      </choice>
    </zeroOrMore>
  </define>
</grammar>
<!-- ========= UML:UML ========= -->
